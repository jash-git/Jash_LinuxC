<!DOCTYPE html>
<!-- saved from url=(0041)http://biancheng.dnbcw.info/c/398214.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=GBK"><title>c++实现aes加密算法，对字符串进行加密-c/c++-电脑编程网</title><meta name="keywords" content="c++实现aes加密算法，对字符串进行加密,c/c++"><meta name="description" content="导读： 我的blog中，已经写过一篇关于aes加密算法的调用。不过使用的参数必须时unsigned char类型。我们在编程中使用最多的char类型，我从网上下载了一..."><link href="./123_files/info_show.css" rel="stylesheet" type="text/css"><link href="./123_files/bdsstyle.css" rel="stylesheet" type="text/css"></head><body><iframe style="display: none;" frameborder="0"></iframe><div id="bdshare_s" style="display: block;"><iframe id="bdsIfr" style="position:absolute;display:none;z-index:9999;" frameborder="0"></iframe><div id="bdshare_l" style="display: none;"><div id="bdshare_l_c"><h6>分享到</h6><ul><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_mshare mshare">一键分享</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_qzone qqkj">QQ空间</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_tsina xlwb">新浪微博</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_baidu bdsc">百度搜藏</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_renren rrw">人人网</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_tqq txwb">腾讯微博</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_bdxc bdxc">百度相册</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_kaixin001 kxw">开心网</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_tqf txpy">腾讯朋友</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_tieba bdtb">百度贴吧</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_douban db">豆瓣网</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_tsohu shwb">搜狐微博</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_bdhome bdhome">百度新首页</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_sqq sqq">QQ好友</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_thx thx">和讯微博</a></li><li><a href="http://biancheng.dnbcw.info/c/398214.html#" class="bds_more">更多...</a></li></ul><p><a href="http://biancheng.dnbcw.info/c/398214.html#" class="goWebsite">百度分享</a></p></div></div></div><div class="all"><div class="all_l"><div id="danav"><script>da("danav")</script><script src="./123_files/logger.js"></script></div><div class="nav bglv"><img src="./123_files/logo1.gif" alt="电脑编程网" align="absmiddle"><a href="http://www.dnbcw.info/">电脑编程网</a> &gt; <a href="http://biancheng.dnbcw.info/c/">c/c++</a> &gt; 正文<a href="http://www.dnbcw.info/rss.php?id=7"><img src="./123_files/rss.gif" alt="订阅本分类信息" border="0"></a></div><div class="db"><h1>c++实现aes加密算法，对字符串进行加密</h1><div class="hui" style="overflow:auto">作者：佚名　和<a href="http://biancheng.dnbcw.info/c/"><strong>c/c++</strong></a>相关&nbsp;&nbsp;</div><div style="height:250px;margin:10px 0"><div style="float:left"><script type="text/javascript"><!--
google_ad_client = "ca-pub-5582534119917896";
/* 300x250, 创建于 09-5-11 */
google_ad_slot = "3847221247";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script><script type="text/javascript" src="./123_files/show_ads.js"></script><ins style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px"><ins id="aswift_0_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px"><iframe width="300" height="250" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;"></iframe></ins></ins></div><div style="float:right"><script type="text/javascript">/*300*250，创建于2012-9-8*/ var cpro_id = 'u1053763';</script><script src="./123_files/c.js" type="text/javascript"></script><script type="text/javascript" charset="utf-8" src="./123_files/ecom"></script><div style="display:none">-</div> <iframe id="cproIframe1" src="./123_files/uijs.htm" width="300" height="250" align="center,center" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" allowtransparency="true"></iframe></div></div><div style="overflow:auto"><div id="bdshare" class="bdshare_t bds_tools get-codes-bdshare"><a class="bds_tsina" title="分享到新浪微博" href="http://biancheng.dnbcw.info/c/398214.html#">新浪微博</a><a class="bds_qzone" title="分享到QQ空间" href="http://biancheng.dnbcw.info/c/398214.html#">QQ空间</a><a class="bds_tqq" title="分享到腾讯微博" href="http://biancheng.dnbcw.info/c/398214.html#">QQ微博</a><a class="bds_baidu" title="分享到百度搜藏" href="http://biancheng.dnbcw.info/c/398214.html#">百度搜藏</a><a class="bds_tqf" title="分享到腾讯朋友" href="http://biancheng.dnbcw.info/c/398214.html#">腾讯朋友</a><a class="bds_qq" title="分享到QQ收藏" href="http://biancheng.dnbcw.info/c/398214.html#">QQ收藏</a><a class="bds_hi" title="分享到百度空间" href="http://biancheng.dnbcw.info/c/398214.html#">百度空间</a><a class="bds_renren" title="分享到人人网" href="http://biancheng.dnbcw.info/c/398214.html#">人人网</a><a class="bds_kaixin001" title="分享到开心网" href="http://biancheng.dnbcw.info/c/398214.html#">开心网</a><a class="shareCount" href="http://biancheng.dnbcw.info/c/398214.html#" title="累计分享0次">0</a></div></div><div class="content">&nbsp;&nbsp;&nbsp; 我的blog中，已经写过一篇关于aes<a href="http://biancheng.dnbcw.info/jiami/">加密</a>算法的调用。不过使用的参数必须时unsigned char类型。我们在<br>编程中使用最多的char类型，我从网上下载了一个代码，追加了一部分代码。<br>&nbsp;&nbsp;&nbsp; 其主要功能进行实现unsigned char类型数据到char类型转化，将unsigned char结果与16进制字符串串之间的转化。代码如下：<br><div><div><p> 点击(此处)折叠或打开</p></div><div id="code98"><ol><li>#ifndef AES_H<br></li><li>#define AES_H<br></li><li><br></li><li>#include &lt;string.h&gt;<br></li><li><br></li><li>class AES<br></li><li>{<br></li><li>public:<br></li><li>&nbsp;&nbsp;AES(unsigned char* key);<br></li><li>&nbsp;&nbsp;virtual ~AES();<br></li><li>&nbsp;&nbsp;unsigned char* Cipher(unsigned char* input);<br></li><li>&nbsp;&nbsp;unsigned char* InvCipher(unsigned char* input);<br></li><li>&nbsp;&nbsp;void* Cipher(void* input, int length=0);<br></li><li>&nbsp;&nbsp;void* InvCipher(void* input, int length);<br></li><li><br></li><li>&nbsp;&nbsp;void Cipher(char *input, char *output);<br></li><li>&nbsp;&nbsp;void InvCipher(char *inut, char *output);<br></li><li><br></li><li>private:<br></li><li>&nbsp;&nbsp;unsigned char Sbox[256];<br></li><li>&nbsp;&nbsp;unsigned char InvSbox[256];<br></li><li>&nbsp;&nbsp;unsigned char w[11][4][4];<br></li><li><br></li><li>&nbsp;&nbsp;void KeyExpansion(unsigned char* key, unsigned char w[][4][4]);<br></li><li>&nbsp;&nbsp;unsigned char FFmul(unsigned char a, unsigned char b);<br></li><li><br></li><li>&nbsp;&nbsp;void SubBytes(unsigned char state[][4]);<br></li><li>&nbsp;&nbsp;void ShiftRows(unsigned char state[][4]);<br></li><li>&nbsp;&nbsp;void MixColumns(unsigned char state[][4]);<br></li><li>&nbsp;&nbsp;void AddRoundKey(unsigned char state[][4], unsigned char k[][4]);<br></li><li><br></li><li>&nbsp;&nbsp;void InvSubBytes(unsigned char state[][4]);<br></li><li>&nbsp;&nbsp;void InvShiftRows(unsigned char state[][4]);<br></li><li>&nbsp;&nbsp;void InvMixColumns(unsigned char state[][4]);<br></li><li><br></li><li>&nbsp;&nbsp;int strToHex(const char *ch, char *hex);<br></li><li>&nbsp;&nbsp;int hexToStr(const char *hex, char *ch);<br></li><li>&nbsp;&nbsp;int ascillToValue(const char ch);<br></li><li>&nbsp;&nbsp;char valueToHexCh(const int value);<br></li><li>&nbsp;&nbsp;int getUCharLen(const unsigned char *uch);<br></li><li>&nbsp;&nbsp;int strToUChar(const char *ch, unsigned char *uch);<br></li><li>&nbsp;&nbsp;int ucharToStr(const unsigned char *uch, char *ch);<br></li><li>&nbsp;&nbsp;int ucharToHex(const unsigned char *uch, char *hex);<br></li><li>&nbsp;&nbsp;int hexToUChar(const char *hex, unsigned char *uch);<br></li><li>};<br></li><li><br></li><li>#endif // AES_H</li></ol></div></div>对应的cpp文件如下：<br><div><div><p> 点击(此处)折叠或打开</p></div><div id="code180"><ol><li>#include "aes.h"<br></li><li><br></li><li>AES::AES(unsigned char* key)<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char sBox[] =<br></li><li>&nbsp;&nbsp;{ /*  0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f */<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76, /*0*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0,0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0, /*1*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc,0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15, /*2*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a,0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75, /*3*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0,0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84, /*4*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b,0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf, /*5*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85,0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8, /*6*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5,0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2, /*7*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17,0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73, /*8*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88,0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb, /*9*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c,0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79, /*a*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9,0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08, /*b*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6,0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a, /*c*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e,0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e, /*d*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94,0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf, /*e*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68,0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16  /*f*/<br></li><li>&nbsp;&nbsp;};<br></li><li>&nbsp;&nbsp;unsigned char invsBox[256] =<br></li><li>&nbsp;&nbsp;{ /*  0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f  */<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x52,0x09,0x6a,0xd5,0x30,0x36,0xa5,0x38,0xbf,0x40,0xa3,0x9e,0x81,0xf3,0xd7,0xfb, /*0*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x7c,0xe3,0x39,0x82,0x9b,0x2f,0xff,0x87,0x34,0x8e,0x43,0x44,0xc4,0xde,0xe9,0xcb, /*1*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x54,0x7b,0x94,0x32,0xa6,0xc2,0x23,0x3d,0xee,0x4c,0x95,0x0b,0x42,0xfa,0xc3,0x4e, /*2*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x08,0x2e,0xa1,0x66,0x28,0xd9,0x24,0xb2,0x76,0x5b,0xa2,0x49,0x6d,0x8b,0xd1,0x25, /*3*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x72,0xf8,0xf6,0x64,0x86,0x68,0x98,0x16,0xd4,0xa4,0x5c,0xcc,0x5d,0x65,0xb6,0x92, /*4*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x6c,0x70,0x48,0x50,0xfd,0xed,0xb9,0xda,0x5e,0x15,0x46,0x57,0xa7,0x8d,0x9d,0x84, /*5*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x90,0xd8,0xab,0x00,0x8c,0xbc,0xd3,0x0a,0xf7,0xe4,0x58,0x05,0xb8,0xb3,0x45,0x06, /*6*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0xd0,0x2c,0x1e,0x8f,0xca,0x3f,0x0f,0x02,0xc1,0xaf,0xbd,0x03,0x01,0x13,0x8a,0x6b, /*7*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x3a,0x91,0x11,0x41,0x4f,0x67,0xdc,0xea,0x97,0xf2,0xcf,0xce,0xf0,0xb4,0xe6,0x73, /*8*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x96,0xac,0x74,0x22,0xe7,0xad,0x35,0x85,0xe2,0xf9,0x37,0xe8,0x1c,0x75,0xdf,0x6e, /*9*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x47,0xf1,0x1a,0x71,0x1d,0x29,0xc5,0x89,0x6f,0xb7,0x62,0x0e,0xaa,0x18,0xbe,0x1b, /*a*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0xfc,0x56,0x3e,0x4b,0xc6,0xd2,0x79,0x20,0x9a,0xdb,0xc0,0xfe,0x78,0xcd,0x5a,0xf4, /*b*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x1f,0xdd,0xa8,0x33,0x88,0x07,0xc7,0x31,0xb1,0x12,0x10,0x59,0x27,0x80,0xec,0x5f, /*c*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x60,0x51,0x7f,0xa9,0x19,0xb5,0x4a,0x0d,0x2d,0xe5,0x7a,0x9f,0x93,0xc9,0x9c,0xef, /*d*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0xa0,0xe0,0x3b,0x4d,0xae,0x2a,0xf5,0xb0,0xc8,0xeb,0xbb,0x3c,0x83,0x53,0x99,0x61, /*e*/<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;0x17,0x2b,0x04,0x7e,0xba,0x77,0xd6,0x26,0xe1,0x69,0x14,0x63,0x55,0x21,0x0c,0x7d  /*f*/<br></li><li>&nbsp;&nbsp;};<br></li><li>&nbsp;&nbsp;memcpy(Sbox, sBox, 256);<br></li><li>&nbsp;&nbsp;memcpy(InvSbox, invsBox, 256);<br></li><li>&nbsp;&nbsp;KeyExpansion(key, w);<br></li><li>}<br></li><li><br></li><li>AES::~AES()<br></li><li>{<br></li><li><br></li><li>}<br></li><li><br></li><li>void AES::Cipher(char *input, char *output)<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char uch_input[1024];<br></li><li>&nbsp;&nbsp;strToUChar(input, uch_input);<br></li><li>&nbsp;&nbsp;Cipher(uch_input);<br></li><li>&nbsp;&nbsp;ucharToHex(uch_input,output);<br></li><li>}<br></li><li><br></li><li>void AES::InvCipher(char *input, char *output)<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char uch_input[1024];<br></li><li>&nbsp;&nbsp;hexToUChar(input, uch_input);<br></li><li>&nbsp;&nbsp;InvCipher(uch_input);<br></li><li>&nbsp;&nbsp;ucharToStr(uch_input, output);<br></li><li>}<br></li><li><br></li><li>unsigned char* AES::Cipher(unsigned char* input)<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char state[4][4];<br></li><li>&nbsp;&nbsp;int i,r,c;<br></li><li><br></li><li>&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(c=0; c&lt;4 ;c++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state[r][c] = input[c*4+r];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;AddRoundKey(state,w[0]);<br></li><li><br></li><li>&nbsp;&nbsp;for(i=1; i&lt;=10; i++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;SubBytes(state);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;ShiftRows(state);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;if(i!=10)MixColumns(state);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;AddRoundKey(state,w[i]);<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(c=0; c&lt;4 ;c++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input[c*4+r] = state[r][c];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;return input;<br></li><li>}<br></li><li><br></li><li>unsigned char* AES::InvCipher(unsigned char* input)<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char state[4][4];<br></li><li>&nbsp;&nbsp;int i,r,c;<br></li><li><br></li><li>&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(c=0; c&lt;4 ;c++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state[r][c] = input[c*4+r];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;AddRoundKey(state, w[10]);<br></li><li>&nbsp;&nbsp;for(i=9; i&gt;=0; i--)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;InvShiftRows(state);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;InvSubBytes(state);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;AddRoundKey(state, w[i]);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;if(i)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InvMixColumns(state);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(c=0; c&lt;4 ;c++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input[c*4+r] = state[r][c];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;return input;<br></li><li>}<br></li><li><br></li><li>void* AES::Cipher(void* input, int length)<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char* in = (unsigned char*) input;<br></li><li>&nbsp;&nbsp;int i;<br></li><li>&nbsp;&nbsp;if(!length)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;while(*(in+length++));<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;in = (unsigned char*) input;<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;for(i=0; i&lt;length; i+=16)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;Cipher(in+i);<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;return input;<br></li><li>}<br></li><li><br></li><li>void* AES::InvCipher(void* input, int length)<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char* in = (unsigned char*) input;<br></li><li>&nbsp;&nbsp;int i;<br></li><li>&nbsp;&nbsp;for(i=0; i&lt;length; i+=16)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;InvCipher(in+i);<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;return input;<br></li><li>}<br></li><li><br></li><li>void AES::KeyExpansion(unsigned char* key, unsigned char w[][4][4])<br></li><li>{<br></li><li>&nbsp;&nbsp;int i,j,r,c;<br></li><li>&nbsp;&nbsp;unsigned char rc[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36};<br></li><li>&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(c=0; c&lt;4; c++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w[0][r][c] = key[r+c*4];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;for(i=1; i&lt;=10; i++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(j=0; j&lt;4; j++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char t[4];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t[r] = j ? w[i][r][j-1] : w[i-1][r][3];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(j == 0)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char temp = t[0];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(r=0; r&lt;3; r++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t[r] = Sbox[t[(r+1)%4]];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t[3] = Sbox[temp];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t[0] ^= rc[i-1];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w[i][r][j] = w[i-1][r][j] ^ t[r];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li>}<br></li><li><br></li><li>unsigned char AES::FFmul(unsigned char a, unsigned char b)<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char bw[4];<br></li><li>&nbsp;&nbsp;unsigned char res=0;<br></li><li>&nbsp;&nbsp;int i;<br></li><li>&nbsp;&nbsp;bw[0] = b;<br></li><li>&nbsp;&nbsp;for(i=1; i&lt;4; i++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;bw[i] = bw[i-1]&lt;&lt;1;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;if(bw[i-1]&amp;0x80)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bw[i]^=0x1b;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;for(i=0; i&lt;4; i++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;if((a&gt;&gt;i)&amp;0x01)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res ^= bw[i];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;return res;<br></li><li>}<br></li><li><br></li><li>void AES::SubBytes(unsigned char state[][4])<br></li><li>{<br></li><li>&nbsp;&nbsp;int r,c;<br></li><li>&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(c=0; c&lt;4; c++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state[r][c] = Sbox[state[r][c]];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li>}<br></li><li><br></li><li>void AES::ShiftRows(unsigned char state[][4])<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char t[4];<br></li><li>&nbsp;&nbsp;int r,c;<br></li><li>&nbsp;&nbsp;for(r=1; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(c=0; c&lt;4; c++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t[c] = state[r][(c+r)%4];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(c=0; c&lt;4; c++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state[r][c] = t[c];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li>}<br></li><li><br></li><li>void AES::MixColumns(unsigned char state[][4])<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char t[4];<br></li><li>&nbsp;&nbsp;int r,c;<br></li><li>&nbsp;&nbsp;for(c=0; c&lt; 4; c++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t[r] = state[r][c];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state[r][c] = FFmul(0x02, t[r])<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^ FFmul(0x03, t[(r+1)%4])<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^ FFmul(0x01, t[(r+2)%4])<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^ FFmul(0x01, t[(r+3)%4]);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li>}<br></li><li><br></li><li>void AES::AddRoundKey(unsigned char state[][4], unsigned char k[][4])<br></li><li>{<br></li><li>&nbsp;&nbsp;int r,c;<br></li><li>&nbsp;&nbsp;for(c=0; c&lt;4; c++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state[r][c] ^= k[r][c];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li>}<br></li><li><br></li><li>void AES::InvSubBytes(unsigned char state[][4])<br></li><li>{<br></li><li>&nbsp;&nbsp;int r,c;<br></li><li>&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(c=0; c&lt;4; c++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state[r][c] = InvSbox[state[r][c]];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li>}<br></li><li><br></li><li>void AES::InvShiftRows(unsigned char state[][4])<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char t[4];<br></li><li>&nbsp;&nbsp;int r,c;<br></li><li>&nbsp;&nbsp;for(r=1; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(c=0; c&lt;4; c++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t[c] = state[r][(c-r+4)%4];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(c=0; c&lt;4; c++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state[r][c] = t[c];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li>}<br></li><li><br></li><li>void AES::InvMixColumns(unsigned char state[][4])<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char t[4];<br></li><li>&nbsp;&nbsp;int r,c;<br></li><li>&nbsp;&nbsp;for(c=0; c&lt; 4; c++)<br></li><li>&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t[r] = state[r][c];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;for(r=0; r&lt;4; r++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;state[r][c] = FFmul(0x0e, t[r])<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^ FFmul(0x0b, t[(r+1)%4])<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^ FFmul(0x0d, t[(r+2)%4])<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^ FFmul(0x09, t[(r+3)%4]);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;}<br></li><li>}<br></li><li><br></li><li>int AES::getUCharLen(const unsigned char *uch)<br></li><li>{<br></li><li>&nbsp;&nbsp;int len = 0;<br></li><li>&nbsp;&nbsp;while(*uch++)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;++len;<br></li><li><br></li><li>&nbsp;&nbsp;return len;<br></li><li>}<br></li><li><br></li><li>int AES::ucharToHex(const unsigned char *uch, char *hex)<br></li><li>{<br></li><li>&nbsp;&nbsp;int high,low;<br></li><li>&nbsp;&nbsp;int tmp = 0;<br></li><li>&nbsp;&nbsp;if(uch == NULL || hex == NULL){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return -1;<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;if(getUCharLen(uch) == 0){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return -2;<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;while(*uch){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;tmp = (int)*uch;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;high = tmp &gt;&gt; 4;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;low = tmp &amp; 15;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;*hex++ = valueToHexCh(high); //先写高字节<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;*hex++ = valueToHexCh(low); //其次写低字节<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;uch++;<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;*hex = '\0';<br></li><li>&nbsp;&nbsp;return 0;<br></li><li>}<br></li><li><br></li><li>int AES::hexToUChar(const char *hex, unsigned char *uch)<br></li><li>{<br></li><li>&nbsp;&nbsp;int high,low;<br></li><li>&nbsp;&nbsp;int tmp = 0;<br></li><li>&nbsp;&nbsp;if(hex == NULL || uch == NULL){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return -1;<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;if(strlen(hex) %2 == 1){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return -2;<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;while(*hex){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;high = ascillToValue(*hex);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;if(high &lt; 0){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*uch = '\0';<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -3;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;hex++; //指针移动到下一个字符上<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;low = ascillToValue(*hex);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;if(low &lt; 0){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*uch = '\0';<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -3;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;tmp = (high &lt;&lt; 4) + low;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;*uch++ = tmp;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;hex++;<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;*uch = (int)'\0';<br></li><li>&nbsp;&nbsp;return 0;<br></li><li>}<br></li><li><br></li><li>int AES::strToUChar(const char *ch, unsigned char *uch)<br></li><li>{<br></li><li>&nbsp;&nbsp;int tmp = 0;<br></li><li>&nbsp;&nbsp;if(ch == NULL || uch == NULL)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return -1;<br></li><li>&nbsp;&nbsp;if(strlen(ch) == 0)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return -2;<br></li><li><br></li><li>&nbsp;&nbsp;while(*ch){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;tmp = (int)*ch;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;*uch++ = tmp;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;ch++;<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;*uch = (int)'\0';<br></li><li>&nbsp;&nbsp;return 0;<br></li><li>}<br></li><li><br></li><li>int AES::ucharToStr(const unsigned char *uch, char *ch)<br></li><li>{<br></li><li>&nbsp;&nbsp;int tmp = 0;<br></li><li>&nbsp;&nbsp;if(uch == NULL || ch == NULL)<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return -1;<br></li><li><br></li><li>&nbsp;&nbsp;while(*uch){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;tmp = (int)*uch;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;*ch++ = (char)tmp;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;uch++;<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;*ch = '\0';<br></li><li><br></li><li>&nbsp;&nbsp;return 0;<br></li><li>}<br></li><li><br></li><li>int AES::strToHex(const char *ch, char *hex)<br></li><li>{<br></li><li>&nbsp;&nbsp;int high,low;<br></li><li>&nbsp;&nbsp;int tmp = 0;<br></li><li>&nbsp;&nbsp;if(ch == NULL || hex == NULL){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return -1;<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;if(strlen(ch) == 0){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return -2;<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;while(*ch){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;tmp = (int)*ch;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;high = tmp &gt;&gt; 4;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;low = tmp &amp; 15;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;*hex++ = valueToHexCh(high); //先写高字节<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;*hex++ = valueToHexCh(low); //其次写低字节<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;ch++;<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;*hex = '\0';<br></li><li>&nbsp;&nbsp;return 0;<br></li><li>}<br></li><li><br></li><li>int AES::hexToStr(const char *hex, char *ch)<br></li><li>{<br></li><li>&nbsp;&nbsp;int high,low;<br></li><li>&nbsp;&nbsp;int tmp = 0;<br></li><li>&nbsp;&nbsp;if(hex == NULL || ch == NULL){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return -1;<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;if(strlen(hex) %2 == 1){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return -2;<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;while(*hex){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;high = ascillToValue(*hex);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;if(high &lt; 0){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ch = '\0';<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -3;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;hex++; //指针移动到下一个字符上<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;low = ascillToValue(*hex);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;if(low &lt; 0){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ch = '\0';<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -3;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;tmp = (high &lt;&lt; 4) + low;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;*ch++ = (char)tmp;<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;hex++;<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;*ch = '\0';<br></li><li>&nbsp;&nbsp;return 0;<br></li><li>}<br></li><li><br></li><li>int AES::ascillToValue(const char ch){<br></li><li>&nbsp;&nbsp;int result = 0;<br></li><li>&nbsp;&nbsp;//获取16进制的高字节位数据<br></li><li>&nbsp;&nbsp;if(ch &gt;= '0' &amp;&amp; ch &lt;= '9'){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;result = (int)(ch - '0');<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;else if(ch &gt;= 'a' &amp;&amp; ch &lt;= 'z'){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;result = (int)(ch - 'a') + 10;<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;else if(ch &gt;= 'A' &amp;&amp; ch &lt;= 'Z'){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;result = (int)(ch - 'A') + 10;<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;else{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;result = -1;<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;return result;<br></li><li>}<br></li><li><br></li><li>char AES::valueToHexCh(const int value)<br></li><li>{<br></li><li>&nbsp;&nbsp;char result = '\0';<br></li><li>&nbsp;&nbsp;if(value &gt;= 0 &amp;&amp; value &lt;= 9){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;result = (char)(value + 48); //48为ascii编码的‘0’字符编码值<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;else if(value &gt;= 10 &amp;&amp; value &lt;= 15){<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;result = (char)(value - 10 + 65); //减去10则找出其在16进制的偏移量，65为ascii的'A'的字符编码值<br></li><li>&nbsp;&nbsp;}<br></li><li>&nbsp;&nbsp;else{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;;<br></li><li>&nbsp;&nbsp;}<br></li><li><br></li><li>&nbsp;&nbsp;return result;<br></li><li>}</li></ol></div></div>&nbsp;&nbsp;&nbsp;&nbsp; 经过对代码的补充，这样我们在调用<a href="http://biancheng.dnbcw.info/jiami/">加密</a>，解密时，就非常方便了，不用再考虑unsigned char类型字符串了。<br>直接使用char类型字符串，就好了。调用如下：<br><br><div><div><p> 点击(此处)折叠或打开</p></div><div id="code397"><ol><li>#include &lt;QString&gt;<br></li><li><br></li><li>#include &lt;stdio.h&gt;<br></li><li>#include "aes.h"<br></li><li><br></li><li>int main(int argc, char *argv[])<br></li><li>{<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;char mingwen[] = "http://www.baidu.com";<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;char miwen_hex[1024];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;//char miwen_hex[] = "8FEEEFE524F8B68DC1FCA2899AC1A6B82E636F6D";<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;char result[1024];<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char key[] = "xcysoft123";<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;AES aes(key);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;aes.Cipher(mingwen, miwen_hex);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;printf("%s\n",miwen_hex);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;aes.InvCipher(miwen_hex, result);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;printf("%s\n",result);<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;getchar();<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<br></li><li>}</li></ol></div></div>附件为使用qt creator开发工具，加载对aes加密算法的测试。<br><br>&nbsp;AES.rar &nbsp; <br><br>补充：在QT开发环境中，我们经常使用的QString类型进行字符串的加密，解密。因此编写一个类。<br>来进行方便的操作，代码如下：<br>AesHelper.h的源代码<br><div><div><p> 点击(此处)折叠或打开</p></div><div id="code268"><ol><li>#ifndef AESHELPER_H<br></li><li>#define AESHELPER_H<br></li><li><br></li><li>#include &lt;QString&gt;<br></li><li>#include &lt;QTextCodec&gt;<br></li><li><br></li><li>#include &lt;string.h&gt;<br></li><li><br></li><li>#include "aes.h"<br></li><li><br></li><li>class AesHelper<br></li><li>{<br></li><li>public:<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;AesHelper();<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;~AesHelper();<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;QString aesEncrypt(QString mingwen);<br></li><li><br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;QString aesUncrypt(QString miwen);<br></li><li><br></li><li>private:<br></li><li>&nbsp;&nbsp;&nbsp;&nbsp;AES *aes;<br></li><li>};<br></li><li><br></li><li>#endif // AESHELPER_H</li></ol></div></div>AesHelper.cpp的代码如下：<br><div><div><p> 点击(此处)折叠或打开</p></div><div id="code773"><ol><li>#include "AesHelper.h"<br></li><li><br></li><li>AesHelper::AesHelper()<br></li><li>{<br></li><li>&nbsp;&nbsp;unsigned char key[] = "1p2w3e4r";<br></li><li>&nbsp;&nbsp;aes = new AES(key);<br></li><li>}<br></li><li><br></li><li>AesHelper::~AesHelper()<br></li><li>{<br></li><li>&nbsp;&nbsp;delete aes;<br></li><li>&nbsp;&nbsp;aes = 0;<br></li><li>}<br></li><li><br></li><li>QString AesHelper::aesEncrypt(QString mingwen)<br></li><li>{<br></li><li>&nbsp;&nbsp;QString result = QString("");<br></li><li>&nbsp;&nbsp;char ch_mingwen[10240];<br></li><li>&nbsp;&nbsp;char ch_miwen[10240];<br></li><li>&nbsp;&nbsp;strcpy(ch_mingwen, mingwen.toUtf8().data());<br></li><li>&nbsp;&nbsp;aes-&gt;Cipher(ch_mingwen, ch_miwen);<br></li><li>&nbsp;&nbsp;result = QString(ch_miwen);<br></li><li>&nbsp;&nbsp;return result;<br></li><li>}<br></li><li><br></li><li>QString AesHelper::aesUncrypt(QString miwen)<br></li><li>{<br></li><li>&nbsp;&nbsp;QString result = QString("");<br></li><li>&nbsp;&nbsp;char ch_mingwen[10240];<br></li><li>&nbsp;&nbsp;char ch_miwen[10240];<br></li><li>&nbsp;&nbsp;strcpy(ch_miwen, miwen.toUtf8().data());<br></li><li>&nbsp;&nbsp;aes-&gt;InvCipher(ch_miwen, ch_mingwen);<br></li><li>&nbsp;&nbsp;result = QString(ch_mingwen);<br></li><li><br></li><li>&nbsp;&nbsp;return result;<br></li><li>}</li></ol></div></div><br></div><h3>相关资料：</h3><ul class="ul_xiangguan"><li><a href="http://biancheng.dnbcw.info/c/">c/c++</a>｜<a href="http://biancheng.dnbcw.info/c/399421.html">C++中cin/cout高级格式化操作</a></li><li><a href="http://biancheng.dnbcw.info/c/">c/c++</a>｜<a href="http://biancheng.dnbcw.info/c/399423.html">atof()因为不通头文件引发的错误</a></li><li><a href="http://biancheng.dnbcw.info/c/">c/c++</a>｜<a href="http://biancheng.dnbcw.info/c/399664.html">关于inline函数</a></li><li><a href="http://biancheng.dnbcw.info/c/"><span style="color:red">c/c++</span></a>｜<a href="./123_files/123.htm"><span style="color:red">c++实现aes加密算法，对字符串进行加密</span></a></li><li><a href="http://biancheng.dnbcw.info/c/">c/c++</a>｜<a href="http://biancheng.dnbcw.info/c/398213.html">线程高级操作 之 线程同步（一）使用互斥量</a></li><li><a href="http://biancheng.dnbcw.info/c/">c/c++</a>｜<a href="http://biancheng.dnbcw.info/c/398212.html">C++ Slab分配器的实现</a></li><li><a href="http://biancheng.dnbcw.info/c/">c/c++</a>｜<a href="http://biancheng.dnbcw.info/c/397953.html">线程基本操作</a></li></ul><p><strong>c++实现aes加密算法，对字符串进行加密</strong>来源网络，如有侵权请告知，即处理！</p></div></div><div class="all_r"><h3 class="bglv">编程Tags：</h3><div class="content"><a href="http://biancheng.dnbcw.info/asp/">asp</a>　<a href="http://biancheng.dnbcw.info/sql/">数据库</a>　<a href="http://biancheng.dnbcw.info/java/">java</a>　<a href="http://biancheng.dnbcw.info/javascript/">javascript</a>　<a href="http://biancheng.dnbcw.info/php/">php</a>　<a href="http://biancheng.dnbcw.info/jsp/">jsp</a>　<a href="http://biancheng.dnbcw.info/c/">c/c++</a>　<a href="http://biancheng.dnbcw.info/win2003/">服务器</a>　<a href="http://biancheng.dnbcw.info/linux/">linux</a>　<a href="http://biancheng.dnbcw.info/net/">asp.net</a>　<a href="http://biancheng.dnbcw.info/ajax/">ajax</a>　<a href="http://biancheng.dnbcw.info/vb/">vb</a>　<a href="http://biancheng.dnbcw.info/Delphi/">Delphi</a>　<a href="http://biancheng.dnbcw.info/vc/">vc</a>　<a href="http://biancheng.dnbcw.info/mysql/">mysql</a>　<a href="http://biancheng.dnbcw.info/mssql/">mssql</a>　<a href="http://biancheng.dnbcw.info/oracle/">oracle</a>&nbsp;<a href="http://biancheng.dnbcw.info/access/">access</a>　<a href="http://biancheng.dnbcw.info/flash/">flash</a>　<a href="http://biancheng.dnbcw.info/jiami/">加密</a>　<a href="http://biancheng.dnbcw.info/md5/">md5</a><br><a href="http://biancheng.dnbcw.info/zhengzebiaodashi/">正则表达式</a>　<a href="http://biancheng.dnbcw.info/css/">css</a>　<a href="http://biancheng.dnbcw.info/dos/">dos</a>　<a href="http://biancheng.dnbcw.info/zhucebiao/">注册表</a>　<a href="http://biancheng.dnbcw.info/ubuntu/">ubuntu</a>　<a href="http://biancheng.dnbcw.info/excel/">excel</a>　<a href="http://biancheng.dnbcw.info/apache/">apache</a>　<a href="http://biancheng.dnbcw.info/python/">python</a>　<a href="http://biancheng.dnbcw.info/ruby/">ruby</a>　<a href="http://biancheng.dnbcw.info/flex/">flex</a>　<a href="http://biancheng.dnbcw.info/perl/">perl</a>　<a href="http://biancheng.dnbcw.info/Windows7/">Windows7</a><br><a href="http://biancheng.dnbcw.info/shouji/">手机软件</a>　<a href="http://biancheng.dnbcw.info/j2ee/">j2ee</a><br><a href="http://biancheng.dnbcw.info/texiao/">网页特效</a>　<a href="http://biancheng.dnbcw.info/jquery/">jquery</a><br><a href="http://biancheng.dnbcw.info/1000wen/">编程10000问</a>　<a href="http://biancheng.dnbcw.info/bsd/">BSD</a>　<a href="http://biancheng.dnbcw.info/solaris/">Solaris</a>　<a href="http://biancheng.dnbcw.info/aix/">AIX</a>　<a href="http://biancheng.dnbcw.info/shell/">Shell</a></div><br><script type="text/javascript"><!--
google_ad_client = "ca-pub-5582534119917896";
/* 160x600 */
google_ad_slot = "9022285783";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script><script type="text/javascript" src="./123_files/show_ads.js"></script><ins style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px"><ins id="aswift_1_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px"><iframe width="160" height="600" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;"></iframe></ins></ins><br><br><div id="daright1"><script>da("daright1")</script><a href="http://www.16land.com/" target="_blank"><img src="./123_files/hanglu.gif" border="0"></a><a>
</a></div></div></div><script src="./123_files/da.js" type="text/javascript"></script><div id="danav_h"></div><div id="daright1_h"></div><div class="bottom"><script src="./123_files/bottom.js" type="text/javascript"></script><a>本站为纯粹的电脑编程学习站点，拒绝任何和电脑编程无关的文章、观点，包括但不限于任何和政治、色情等等和计算机编程无关的内容。<br>本站内容仅供中国大陆以外地区华人学习交流！<br>本站承诺不传播任何和黑客有关的文章、技术知识，但本站文章为程序自动筛选发布人工审查管理，如有审查、管理遗漏，欢迎举报！<br>举报版权中心:tao599999@gmail.com<br>最新：本站仅为互联网资料暂时留存，近期将删除2011年以前的技术文章(http://biancheng.dnbcw.info/zzzzz/XXXXXX.html,XXXXXX在37000之前的)，请务必自行保存文档!<br><br><br><br>
<script type="text/javascript">/*120*270，创建于2012-4-3*/ var cpro_id = 'u835097';</script><script src="./123_files/f.js" type="text/javascript"></script><script type="text/javascript" charset="utf-8" src="./123_files/ecom(1)"></script>
</a></div><script type="text/javascript" id="bdshare_js" data="type=tools" src="./123_files/bds_s_v2.js"></script><script type="text/javascript" id="bdshell_js" src="./123_files/shell_v2.js"></script><div style="padding: 0px; display: block; visibility: visible; border: none; background-image: none; float: none; overflow: hidden; position: fixed; z-index: 2147483647; width: 126px; height: 360px; line-height: 360px; right: 10px; top: 150px; background-position: initial initial; background-repeat: initial initial;" id="cproIframe2holder"><div style="padding: 0px; display: block; visibility: visible; border: none; background-image: none; float: none; overflow: hidden; width: 100%; height: 100%; background-position: initial initial; background-repeat: initial initial;"><div style="display:none">-</div> <iframe id="cproIframe2" src="./123_files/uijs(1).htm" width="126" height="360" align="center,center" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" allowtransparency="true"></iframe></div><div style="padding: 0px; display: block; visibility: visible; border: none; background-color: rgb(255, 255, 255); float: none; overflow: hidden; height: 20px; line-height: 20px; position: absolute; text-decoration: none; color: rgb(51, 51, 51); text-align: left; font-size: 14px; font-family: simsun, arial; cursor: pointer; opacity: 0; width: 53px; right: 0px; bottom: 0px; margin-bottom: 61px; margin-right: 5px; background-position: initial initial; background-repeat: initial initial;">&nbsp;</div></div><script type="text/javascript">document.getElementById("bdshell_js").src = "http://bdimg.share.baidu.com/static/js/shell_v2.js?t=" + new Date().getHours();</script></body><style type="text/css">embed[type*="application/x-shockwave-flash"],embed[src*=".swf"],object[type*="application/x-shockwave-flash"],object[codetype*="application/x-shockwave-flash"],object[src*=".swf"],object[codebase*="swflash.cab"],object[classid*="D27CDB6E-AE6D-11cf-96B8-444553540000"],object[classid*="d27cdb6e-ae6d-11cf-96b8-444553540000"],object[classid*="D27CDB6E-AE6D-11cf-96B8-444553540000"]{	display: none !important;}</style></html>