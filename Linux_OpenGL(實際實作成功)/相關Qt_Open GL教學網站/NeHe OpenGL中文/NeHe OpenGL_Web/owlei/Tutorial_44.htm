<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- 这篇文章由Dancingwind翻译，作者的联系方式zhouwei02@mails.tsinghua.edu.cn -->
<HTML><HEAD><TITLE>NeHe OpenGL教程第四十四课，DancingWind翻译</TITLE>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<style type=text/css>
A:active {
	BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: #bbccff; TEXT-DECORATION: none
}
A:link {
	BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: #bbccff; TEXT-DECORATION: none
}
A:visited {
	BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: #bbccff; TEXT-DECORATION: none
}
A:hover {
	BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: #ffda6a; TEXT-DECORATION: none
}
BODY {
	COLOR: #ffffff; BACKGROUND-COLOR: #000000
}
TD IMG {
	DISPLAY: block
}
.back {
	BACKGROUND: #000022; COLOR: #ffffff
}
.back2 {
	BACKGROUND: #000000; COLOR: #ffffff
}
.back3 {
	BACKGROUND: #000022; COLOR: #ffffff
}
.copy {
	FONT-SIZE: 11px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Tahoma, Verdana, sans-serif; FONT-VARIANT: normal; TEXT-DECORATION: none
}
.head {
	FONT: bold 13px Tahoma, Verdana, sans-serif; TEXT-DECORATION: none
}
.link {
	FONT-SIZE: 14px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Tahoma, Verdana, sans-serif; FONT-VARIANT: normal; TEXT-DECORATION: none
}
.menu {
	FONT: bold 17px Tahoma, Verdana, sans-serif; TEXT-DECORATION: none
}
.news {
	BACKGROUND: #00008b; COLOR: #ffffff
}
.tab {
	PADDING-LEFT: 35px
}
.text {
	FONT-SIZE: 12px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Tahoma, Verdana, sans-serif; FONT-VARIANT: normal; TEXT-DECORATION: none
}
.theme {
	BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: #bbccff
}
.dotted {
	BORDER-RIGHT: #00008b 2px dotted; BORDER-TOP: #00008b 2px dotted; BORDER-LEFT: #00008b 2px dotted; BORDER-BOTTOM: #00008b 2px dotted
}
.solid {
	BORDER-RIGHT: #ffffff 1px solid; BORDER-TOP: #ffffff 1px solid; BORDER-LEFT: #ffffff 1px solid; BORDER-BOTTOM: #ffffff 1px solid
}
.logo {
	BACKGROUND-IMAGE: url("logo.jpg")
}
.menubar {
	BACKGROUND-IMAGE: url(../graphics/rgb/menubar.jpg)
}
.menubg {
	BACKGROUND-IMAGE: url("menubg.jpg")
}
.menuheading {
	BACKGROUND-IMAGE: url(../graphics/rgb/menuheading.jpg)
}
.nehebutton {
	BACKGROUND-IMAGE: url("nehebutton.jpg")
}
.newslogo {
	BACKGROUND-IMAGE: url(../graphics/rgb/newslogo.jpg)
}
.tinylogo {
	BACKGROUND-IMAGE: url("tinylogo.jpg")
}
.bc {
	BACKGROUND-IMAGE:  url(../Pic/bc.png)
}
.bl {
	BACKGROUND-IMAGE:  url("bl.png")
}
.br {
	BACKGROUND-IMAGE:  url(../Pic/br.png)
}
.c {
	BACKGROUND-IMAGE: url("Picc.png")
}
.l {
	BACKGROUND-IMAGE:  url(../Pic/l.png)
}
.lc {
	BACKGROUND-IMAGE: url("Piclc.png")
}
.r {
	BACKGROUND-IMAGE:  url(../Pic/r.png)
}
.rc {
	BACKGROUND-IMAGE: url("Picrc.png")
}
.tc {
	BACKGROUND-IMAGE:  url(../Pic/tc.png)
}
.tl {
	BACKGROUND-IMAGE:  url("tl.png")
}
.tr {
	BACKGROUND-IMAGE:  url(../Pic/tr.png)
}

</style>
</head>
<BODY text=white vLink=#aaccff link=#aaccff bgColor=black>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=tinylogo width=326 height=130><IMG height=130 
      alt="NeHe Productions" 
      src="logo.png" tppabs="http://www.owlei.com/DancingWind/Pic/logo.png" width=326></TD>
      <TD vAlign=center align=middle><div align="center"><FONT class=text><FONT class=theme 
      size=+3><B><I>第44课</I></B></FONT></FONT></div></TD>
  </TR></TBODY></TABLE>
  <!-- 上边框-->
<table border="0" cellPadding="0" cellSpacing="0" width="100%">
<TBODY>
  <tr>
    <td><img height="28" src="tl.jpg" tppabs="http://www.owlei.com/DancingWind/Pic/tl.jpg" width="28"></td>
    <td width="100%"><img height="28" src="tc.gif" tppabs="http://www.owlei.com/DancingWind/Pic/tc.gif" width="100%"></td>
    <td><img height="28" src="tr.gif" tppabs="http://www.owlei.com/DancingWind/Pic/tr.gif" width="28"></td>
  </tr>
</TBODY>
</table>

<!-- 中部-->
<table border="0" cellPadding="0" cellSpacing="0" width="100%">
<TBODY>
  <tr>
  	<!-- 中部左边框-->
    <td  background="l.gif" tppabs="http://www.owlei.com/DancingWind/Pic/l.gif"><img src="l.gif" tppabs="http://www.owlei.com/DancingWind/Pic/l.gif" width="28" height="28"></td>
	<!-- 中部文字部分-->
    <td vAlign="top" width="100%">
	<table width="100%" border="0">
          <tr>
            <td width="20%"><img src="lesson44.jpg" tppabs="http://www.owlei.com/DancingWind/Pic/lesson44.jpg" width="160" height="120"></td>
            <td width="80%"><p><font ><b>3D 光晕</b></font><font size="2"><b></b></font></p>
              <p><font size="3">当镜头对准太阳的时候就会出现这种效果，模拟它非常的简单，一点数学和纹理贴图就够了。好好看看吧。</font></p></td>
          </tr>
     </table>
      </td>
	<!-- 中部右边框-->
    <td background="r.gif" tppabs="http://www.owlei.com/DancingWind/Pic/r.gif"><img src="r.gif" tppabs="http://www.owlei.com/DancingWind/Pic/r.gif" width="28" height="28"></td>
  </tr>
</TBODY>
</table>

<!-- 下边框-->
<table border="0" cellPadding="0" cellSpacing="0" width="100%">
<TBODY>
  <tr>
    <td><img height="28" src="bl.gif" tppabs="http://www.owlei.com/DancingWind/Pic/bl.gif" width="28"></td>
    <td width="100%"><img height="28" src="bc.gif" tppabs="http://www.owlei.com/DancingWind/Pic/bc.gif" width="100%"></td>
    <td><img height="28" src="br.gif" tppabs="http://www.owlei.com/DancingWind/Pic/br.gif" width="28"></td>
  </tr>
</TBODY>
</table>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=tl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=tc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
    width="100%"></TD>
    <TD class=tr><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=l><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
      <TD class=back3 vAlign=top width="100%">大家好,欢迎来到新的一课,在这一课中我们将扩展glCamera类，来实现镜头光晕的效果。在日常生活中，当我们对着光源看时，会发现强烈的反光。<br>
        为了完成这个效果，我们需要一些数学知识。首先，我们需要一些函数，用来检测某个点或球是否在当前的视景体内。接着我们需要一些纹理作为我们的光晕效果，我们可以把它贴在显示面上。
<p>在我的上一个摄像机类里把下面函数写错了，现在修正如下：</p>
    </TD>
    <TD class=r><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=bl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=bc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=br><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<PRE>void glCamera::SetPrespective()<br>{<br>	GLfloat Matrix[16];												<br>	glVector v;														<br>																	</PRE>
<p> <span class="theme">// 根据当前的偏转角旋转视线</span><br>
  glRotatef(m_HeadingDegrees, 0.0f, 1.0f, 0.0f);<br>
  glRotatef(m_PitchDegrees, 1.0f, 0.0f, 0.0f);</p>
<p> <span class="theme">// 返回模型变换矩阵</span><br>
  glGetFloatv(GL_MODELVIEW_MATRIX, Matrix);</p>
<p> <span class="theme">// 获得视线的方向</span><br>
  m_DirectionVector.i = Matrix[8];<br>
  m_DirectionVector.j = Matrix[9];<br>
  m_DirectionVector.k = -Matrix[10];</p>
<p> <span class="theme">// 重置矩阵</span><br>
  glLoadIdentity();</p>
<p> <span class="theme">// 旋转场景</span><br>
  glRotatef(m_PitchDegrees, 1.0f, 0.0f, 0.0f);<br>
  glRotatef(m_HeadingDegrees, 0.0f, 1.0f, 0.0f);</p>
<p> <span class="theme">// 设置当前摄像机的位置</span><br>
  v = m_DirectionVector;<br>
  v *= m_ForwardVelocity;<br>
  m_Position.x += v.i;<br>
  m_Position.y += v.j;<br>
  m_Position.z += v.k;</p>
<p> <span class="theme">// 变换到新的位置</span><br>
  glTranslatef(-m_Position.x, -m_Position.y, -m_Position.z);<br>
  }</p>
<p></p>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=tl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=tc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
    width="100%"></TD>
    <TD class=tr><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=l><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
      <TD class=back3 vAlign=top width="100%"> <p>好了，我们现在开始吧。我将使用4个对立的纹理来制造我们的镜头光晕，第一和二个光晕图像被放置在光源处，第三和第四个图像将根据视点的位置和方向动态的生成。纹理的图像如下所示：</p>
      <table align=center border=0>
        <tbody> 
        <tr> 
          <td align=middle><font class="text">Big Glow<br>
            <br>
            <img 
            src="big_glow.jpg" tppabs="http://www.owlei.com/DancingWind/Pic/big_glow.jpg" width="128" height="128"></font></td>
          <td width=100>&nbsp;</td>
          <td align=middle><font class="text">Streaks<br>
            <br>
            <img 
            src="streaks.jpg" tppabs="http://www.owlei.com/DancingWind/Pic/streaks.jpg" width="128" height="128"></font></td>
        </tr>
        <tr> 
          <td align=middle><font class="text">Glow<br>
            <br>
            <img 
            src="glow.jpg" tppabs="http://www.owlei.com/DancingWind/Pic/glow.jpg" width="64" height="64"></font></td>
          <td width=100>&nbsp;</td>
          <td align=middle><font class="text">Halo<br>
            <br>
            <img 
            src="halo.jpg" tppabs="http://www.owlei.com/DancingWind/Pic/halo.jpg" width="64" height="64"></font></td>
        </tr>
        </tbody>
      </table>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
        <p>现在你在头脑里应该有了一个大慨地图像了吧。我们来说说何时我们应该绘制光晕，一般来说平时我们是看不见这些光晕的，只有当我们对准光源的时候才能看见这些。所以我们首先要获得视景体的数据，下面的函数可以帮我们完成这个功能。</p>
    </TD>
    <TD class=r><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=bl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=bc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=br><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<PRE><span class="theme">// 获得当前视景体的6个平面方程的参数</span><br>void glCamera::UpdateFrustum()<br>{<br>    GLfloat   clip[16];<br>	GLfloat   proj[16];<br>    GLfloat   modl[16];<br>    GLfloat   t;</PRE>
<p> <span class="theme">//返回投影矩阵</span><br>
  glGetFloatv( GL_PROJECTION_MATRIX, proj );</p>
<p> <span class="theme">//返回模型变换矩阵</span><br>
  glGetFloatv( GL_MODELVIEW_MATRIX, modl );</p>
<p> <span class="theme">//计算剪切矩阵，即上面两个矩阵的乘积</span><br>
  clip[ 0] = modl[ 0] * proj[ 0] + modl[ 1] * proj[ 4] + modl[ 2] * proj[ 8] + 
  modl[ 3] * proj[12];<br>
  clip[ 1] = modl[ 0] * proj[ 1] + modl[ 1] * proj[ 5] + modl[ 2] * proj[ 9] + 
  modl[ 3] * proj[13];<br>
  clip[ 2] = modl[ 0] * proj[ 2] + modl[ 1] * proj[ 6] + modl[ 2] * proj[10] + 
  modl[ 3] * proj[14];<br>
  clip[ 3] = modl[ 0] * proj[ 3] + modl[ 1] * proj[ 7] + modl[ 2] * proj[11] + 
  modl[ 3] * proj[15];</p>
<p> clip[ 4] = modl[ 4] * proj[ 0] + modl[ 5] * proj[ 4] + modl[ 6] * proj[ 8] 
  + modl[ 7] * proj[12];<br>
  clip[ 5] = modl[ 4] * proj[ 1] + modl[ 5] * proj[ 5] + modl[ 6] * proj[ 9] + 
  modl[ 7] * proj[13];<br>
  clip[ 6] = modl[ 4] * proj[ 2] + modl[ 5] * proj[ 6] + modl[ 6] * proj[10] + 
  modl[ 7] * proj[14];<br>
  clip[ 7] = modl[ 4] * proj[ 3] + modl[ 5] * proj[ 7] + modl[ 6] * proj[11] + 
  modl[ 7] * proj[15];</p>
<p> clip[ 8] = modl[ 8] * proj[ 0] + modl[ 9] * proj[ 4] + modl[10] * proj[ 8] 
  + modl[11] * proj[12];<br>
  clip[ 9] = modl[ 8] * proj[ 1] + modl[ 9] * proj[ 5] + modl[10] * proj[ 9] + 
  modl[11] * proj[13];<br>
  clip[10] = modl[ 8] * proj[ 2] + modl[ 9] * proj[ 6] + modl[10] * proj[10] + 
  modl[11] * proj[14];<br>
  clip[11] = modl[ 8] * proj[ 3] + modl[ 9] * proj[ 7] + modl[10] * proj[11] + 
  modl[11] * proj[15];</p>
<p> clip[12] = modl[12] * proj[ 0] + modl[13] * proj[ 4] + modl[14] * proj[ 8] 
  + modl[15] * proj[12];<br>
  clip[13] = modl[12] * proj[ 1] + modl[13] * proj[ 5] + modl[14] * proj[ 9] + 
  modl[15] * proj[13];<br>
  clip[14] = modl[12] * proj[ 2] + modl[13] * proj[ 6] + modl[14] * proj[10] + 
  modl[15] * proj[14];<br>
  clip[15] = modl[12] * proj[ 3] + modl[13] * proj[ 7] + modl[14] * proj[11] + 
  modl[15] * proj[15];</p>
<p> <span class="theme">//提取右面的平面方程系数</span><br>
  m_Frustum[0][0] = clip[ 3] - clip[ 0];<br>
  m_Frustum[0][1] = clip[ 7] - clip[ 4];<br>
  m_Frustum[0][2] = clip[11] - clip[ 8];<br>
  m_Frustum[0][3] = clip[15] - clip[12];<br>
  t = GLfloat(sqrt( m_Frustum[0][0] * m_Frustum[0][0] + m_Frustum[0][1] * m_Frustum[0][1] 
  + m_Frustum[0][2] * m_Frustum[0][2] ));<br>
  m_Frustum[0][0] /= t;<br>
  m_Frustum[0][1] /= t;<br>
  m_Frustum[0][2] /= t;<br>
  m_Frustum[0][3] /= t;</p>
<p> <span class="theme">//提取左面的平面方程系数</span><br>
  m_Frustum[1][0] = clip[ 3] + clip[ 0];<br>
  m_Frustum[1][1] = clip[ 7] + clip[ 4];<br>
  m_Frustum[1][2] = clip[11] + clip[ 8];<br>
  m_Frustum[1][3] = clip[15] + clip[12];<br>
  t = GLfloat(sqrt( m_Frustum[1][0] * m_Frustum[1][0] + m_Frustum[1][1] * m_Frustum[1][1] 
  + m_Frustum[1][2] * m_Frustum[1][2] ));<br>
  m_Frustum[1][0] /= t;<br>
  m_Frustum[1][1] /= t;<br>
  m_Frustum[1][2] /= t;<br>
  m_Frustum[1][3] /= t;</p>
<p> <span class="theme">//提取下面的平面方程系数</span><br>
  m_Frustum[2][0] = clip[ 3] + clip[ 1];<br>
  m_Frustum[2][1] = clip[ 7] + clip[ 5];<br>
  m_Frustum[2][2] = clip[11] + clip[ 9];<br>
  m_Frustum[2][3] = clip[15] + clip[13];<br>
  t = GLfloat(sqrt( m_Frustum[2][0] * m_Frustum[2][0] + m_Frustum[2][1] * m_Frustum[2][1] 
  + m_Frustum[2][2] * m_Frustum[2][2] ));<br>
  m_Frustum[2][0] /= t;<br>
  m_Frustum[2][1] /= t;<br>
  m_Frustum[2][2] /= t;<br>
  m_Frustum[2][3] /= t;</p>
<p> <span class="theme">//提取上面的平面方程系数</span><br>
  m_Frustum[3][0] = clip[ 3] - clip[ 1];<br>
  m_Frustum[3][1] = clip[ 7] - clip[ 5];<br>
  m_Frustum[3][2] = clip[11] - clip[ 9];<br>
  m_Frustum[3][3] = clip[15] - clip[13];<br>
  t = GLfloat(sqrt( m_Frustum[3][0] * m_Frustum[3][0] + m_Frustum[3][1] * m_Frustum[3][1] 
  + m_Frustum[3][2] * m_Frustum[3][2] ));<br>
  m_Frustum[3][0] /= t;<br>
  m_Frustum[3][1] /= t;<br>
  m_Frustum[3][2] /= t;<br>
  m_Frustum[3][3] /= t;</p>
<p> <span class="theme">//提取远面的平面方程系数</span><br>
  m_Frustum[4][0] = clip[ 3] - clip[ 2];<br>
  m_Frustum[4][1] = clip[ 7] - clip[ 6];<br>
  m_Frustum[4][2] = clip[11] - clip[10];<br>
  m_Frustum[4][3] = clip[15] - clip[14];<br>
  t = GLfloat(sqrt( m_Frustum[4][0] * m_Frustum[4][0] + m_Frustum[4][1] * m_Frustum[4][1] 
  + m_Frustum[4][2] * m_Frustum[4][2] ));<br>
  m_Frustum[4][0] /= t;<br>
  m_Frustum[4][1] /= t;<br>
  m_Frustum[4][2] /= t;<br>
  m_Frustum[4][3] /= t;</p>
<p> <span class="theme">//提取近面的平面方程系数</span><br>
  m_Frustum[5][0] = clip[ 3] + clip[ 2];<br>
  m_Frustum[5][1] = clip[ 7] + clip[ 6];<br>
  m_Frustum[5][2] = clip[11] + clip[10];<br>
  m_Frustum[5][3] = clip[15] + clip[14];<br>
  t = GLfloat(sqrt( m_Frustum[5][0] * m_Frustum[5][0] + m_Frustum[5][1] * m_Frustum[5][1] 
  + m_Frustum[5][2] * m_Frustum[5][2] ));<br>
  m_Frustum[5][0] /= t;<br>
  m_Frustum[5][1] /= t;<br>
  m_Frustum[5][2] /= t;<br>
  m_Frustum[5][3] /= t;<br>
  }</p>
<p></p>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=tl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=tc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
    width="100%"></TD>
    <TD class=tr><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=l><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
      <TD class=back3 vAlign=top width="100%">现在我们可以测试一个点或圆是否在视景体内了。下面的函数可以测试一个点是否在视景体内。</TD>
    <TD class=r><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=bl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=bc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=br><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<PRE>BOOL glCamera::PointInFrustum(glPoint p)<br>{<br>	int i;<br><br>	for(i = 0; i &lt; 6; i++)<br>	{<br>		if(m_Frustum[i][0] * p.x + m_Frustum[i][1] * p.y + m_Frustum[i][2] * p.z + m_Frustum[i][3] &lt;= 0)<br>		{<br>			return(FALSE);<br>		}<br>	}<br>	return(TRUE);<br>}</PRE>
<p></p>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=tl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=tc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
    width="100%"></TD>
    <TD class=tr><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=l><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=back3 vAlign=top width="100%"><p>下面的函数用来测试某个点是否位于当前场景物体的前面: </p>
        </TD>
    <TD class=r><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=bl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=bc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=br><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<PRE>bool glCamera::IsOccluded(glPoint p)<br>{<br>	GLint viewport[4];						<br>	GLdouble mvmatrix[16], projmatrix[16];  <br>	GLdouble winx, winy, winz;				<br>	GLdouble flareZ;						<br>	GLfloat bufferZ;						</PRE>
<p> glGetIntegerv (GL_VIEWPORT, viewport); <br>
  glGetDoublev (GL_MODELVIEW_MATRIX, mvmatrix); <br>
  glGetDoublev (GL_PROJECTION_MATRIX, projmatrix); </p>
<p> <span class="theme">// 返回顶点p在单位立方体中的位置</span><br>
  gluProject(p.x, p.y, p.z, mvmatrix, projmatrix, viewport, &amp;winx, &amp;winy, 
  &amp;winz);<br>
  flareZ = winz;</p>
<p> <span class="theme">// 读取点(winx,winy)的深度坐标</span><br>
  glReadPixels(winx, winy,1,1,GL_DEPTH_COMPONENT, GL_FLOAT, &amp;bufferZ);</p>
<p> <span class="theme">// 如果深度坐标小于点的坐标，则返回true</span><br>
  if (bufferZ &lt; flareZ)<br>
  return true;<br>
  <span class="theme">//否则返回false</span><br>
  else<br>
  return false;<br>
  }</p>
<p></p>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=tl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=tc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
    width="100%"></TD>
    <TD class=tr><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=l><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
      <TD class=back3 vAlign=top width="100%">我们通过检测光源是否正对我们的视线来决定是否绘制光晕，但如果你的视点超过了光源的位置，则会发生看不见光晕的现象。为了避免这种现象，我们在移动视点的使用，也相应的移动我们的光源。为了在视点和光源之间绘制多个光晕，我们需要计算之间的向量，下面的代码完成这个功能：</TD>
    <TD class=r><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=bl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=bc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=br><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<PRE><span class="theme">//下面的函数完成具体的渲染光晕的任务</span><br>void glCamera::RenderLensFlare()<br>{<br>	GLfloat Length = 0.0f;</PRE>
<p> <span class="theme">// 如果我们的光源在我们的视线范围内，则绘制它</span><br>
  if(SphereInFrustum(m_LightSourcePos, 1.0f) == TRUE)<br>
  {<br>
  vLightSourceToCamera = m_Position - m_LightSourcePos; <span class="theme">// 
  计算光源到我们视线的距离</span><br>
  Length = vLightSourceToCamera.Magnitude(); </p>
<p> <span class="theme">//下面三个函数计算光源位置到光晕结束位置之间的向量</span><br>
  ptIntersect = m_DirectionVector * Length; <br>
  ptIntersect += m_Position;<br>
  vLightSourceToIntersect = ptIntersect - m_LightSourcePos; <br>
  Length = vLightSourceToIntersect.Magnitude(); <br>
  vLightSourceToIntersect.Normalize(); <br>
  <br>
  glEnable(GL_BLEND); <br>
  glBlendFunc(GL_SRC_ALPHA, GL_ONE); <br>
  glDisable(GL_DEPTH_TEST); <br>
  glEnable(GL_TEXTURE_2D);</p>
<PRE>&nbsp;
</PRE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=tl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=tc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
    width="100%"></TD>
    <TD class=tr><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=l><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=back3 vAlign=top width="100%">
      <p>首先我们需要找到光源位置和视点位置之间的向量，接下来我们需要在视线的方向设置一个插值点，这个点的距离必须和光源位置和视点位置之间的距离相等。完成以后，我们找出可以产生光晕的方向，即下图红线的方向，在这个线上我们可以绘制我们的光晕。</p>
      <p>
        <center>
          <img src="illustration.jpg" tppabs="http://www.owlei.com/DancingWind/Pic/illustration.jpg" width="512" height="512">
        </center>
          <br>
      </p>
    </TD>
    <TD class=r><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=bl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=bc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=br><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<PRE>		if (!IsOccluded(m_LightSourcePos))	<span class="theme">//如果光晕可见</span><br>		{<br>			<span class="theme">// 渲染中间的光晕</span><br>			RenderBigGlow(0.60f, 0.60f, 0.8f, 1.0f, m_LightSourcePos, 16.0f);<br>			RenderStreaks(0.60f, 0.60f, 0.8f, 1.0f, m_LightSourcePos, 16.0f);<br>			RenderGlow(0.8f, 0.8f, 1.0f, 0.5f, m_LightSourcePos, 3.5f);</PRE>
<p> <span class="theme">//绘制到光晕结束位置的0.1处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.1f); <br>
  pt += m_LightSourcePos; <br>
  RenderGlow(0.9f, 0.6f, 0.4f, 0.5f, pt, 0.6f); </p>
<p> <span class="theme">//绘制到光晕结束位置的0.15处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.15f); <br>
  pt += m_LightSourcePos; <br>
  RenderHalo(0.8f, 0.5f, 0.6f, 0.5f, pt, 1.7f); <br>
  <br>
  <span class="theme">//绘制到光晕结束位置的0.175处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.175f); <br>
  pt += m_LightSourcePos; <br>
  RenderHalo(0.9f, 0.2f, 0.1f, 0.5f, pt, 0.83f); </p>
<p> <span class="theme">//绘制到光晕结束位置的0.285处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.285f); <br>
  pt += m_LightSourcePos; <br>
  RenderHalo(0.7f, 0.7f, 0.4f, 0.5f, pt, 1.6f); <br>
  <br>
  <span class="theme">//绘制到光晕结束位置的0.2755处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.2755f); <br>
  pt += m_LightSourcePos; <br>
  RenderGlow(0.9f, 0.9f, 0.2f, 0.5f, pt, 0.8f); </p>
<p> <span class="theme">//绘制到光晕结束位置的0.4755处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.4775f); <br>
  pt += m_LightSourcePos; <br>
  RenderGlow(0.93f, 0.82f, 0.73f, 0.5f, pt, 1.0f); <br>
  <br>
  <span class="theme">//绘制到光晕结束位置的0.49处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.49f); <br>
  pt += m_LightSourcePos; <br>
  RenderHalo(0.7f, 0.6f, 0.5f, 0.5f, pt, 1.4f); </p>
<p> <span class="theme">//绘制到光晕结束位置的0.65处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.65f); <br>
  pt += m_LightSourcePos; <br>
  RenderGlow(0.7f, 0.8f, 0.3f, 0.5f, pt, 1.8f); <br>
  <br>
  <span class="theme">//绘制到光晕结束位置的0.63处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.63f); <br>
  pt += m_LightSourcePos; <br>
  RenderGlow(0.4f, 0.3f, 0.2f, 0.5f, pt, 1.4f); </p>
<p> <span class="theme">//绘制到光晕结束位置的0.8处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.8f); <br>
  pt += m_LightSourcePos; <br>
  RenderHalo(0.7f, 0.5f, 0.5f, 0.5f, pt, 1.4f); <br>
  <br>
  <span class="theme">//绘制到光晕结束位置的0.7825处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.7825f); <br>
  pt += m_LightSourcePos; <br>
  RenderGlow(0.8f, 0.5f, 0.1f, 0.5f, pt, 0.6f); </p>
<p> <span class="theme">//绘制到光晕结束位置的1.0处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 1.0f); <br>
  pt += m_LightSourcePos; <br>
  RenderHalo(0.5f, 0.5f, 0.7f, 0.5f, pt, 1.7f); <br>
  <br>
  <span class="theme">//绘制到光晕结束位置的0.975处的光晕</span><br>
  pt = vLightSourceToIntersect * (Length * 0.975f); <br>
  pt += m_LightSourcePos; <br>
  RenderGlow(0.4f, 0.1f, 0.9f, 0.5f, pt, 2.0f); </p>
<p> }<br>
  glDisable(GL_BLEND ); <br>
  glEnable(GL_DEPTH_TEST); <br>
  glDisable(GL_TEXTURE_2D); <br>
  }<br>
  }</p>
<p></p>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=tl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=tc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
    width="100%"></TD>
    <TD class=tr><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=l><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
      <TD class=back3 vAlign=top width="100%">好了，下面的函数用来绘制四种不同的光晕</TD>
    <TD class=r><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=bl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=bc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=br><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<PRE><span class="theme">//绘制Halo形的光晕</span><br>void glCamera::RenderHalo(GLfloat r, GLfloat g, GLfloat b, GLfloat a, glPoint p, GLfloat scale)<br>{<br>	glPoint q[4];<br>	<br>	q[0].x = (p.x - scale);											<br>	q[0].y = (p.y - scale);											<br>		<br>	q[1].x = (p.x - scale);											<br>	q[1].y = (p.y + scale);											<br>		<br>	q[2].x = (p.x + scale);											<br>	q[2].y = (p.y - scale);											<br>		<br>	q[3].x = (p.x + scale);											<br>	q[3].y = (p.y + scale);											<br>		<br>	glPushMatrix();													<br>	glTranslatef(p.x, p.y, p.z);									<br>	glRotatef(-m_HeadingDegrees, 0.0f, 1.0f, 0.0f);<br>	glRotatef(-m_PitchDegrees, 1.0f, 0.0f, 0.0f);<br>	glBindTexture(GL_TEXTURE_2D, m_HaloTexture);					<br>	glColor4f(r, g, b, a);											<br>	<br>	glBegin(GL_TRIANGLE_STRIP);										<br>		glTexCoord2f(0.0f, 0.0f);					<br>		glVertex2f(q[0].x, q[0].y);<br>		glTexCoord2f(0.0f, 1.0f);<br>		glVertex2f(q[1].x, q[1].y);<br>		glTexCoord2f(1.0f, 0.0f);<br>		glVertex2f(q[2].x, q[2].y);<br>		glTexCoord2f(1.0f, 1.0f);<br>		glVertex2f(q[3].x, q[3].y);<br>	glEnd();										<br>	glPopMatrix();													<br>}</PRE>
<p><span class="theme">//绘制Gloew形的光晕</span><br>
  void glCamera::RenderGlow(GLfloat r, GLfloat g, GLfloat b, GLfloat a, glPoint 
  p, GLfloat scale)<br>
  {<br>
  glPoint q[4];<br>
  <br>
  q[0].x = (p.x - scale); <br>
  q[0].y = (p.y - scale); </p>
<p> q[1].x = (p.x - scale); <br>
  q[1].y = (p.y + scale); <br>
  <br>
  q[2].x = (p.x + scale); <br>
  q[2].y = (p.y - scale); <br>
  <br>
  q[3].x = (p.x + scale); <br>
  q[3].y = (p.y + scale); <br>
  <br>
  glPushMatrix(); <br>
  glTranslatef(p.x, p.y, p.z); <br>
  glRotatef(-m_HeadingDegrees, 0.0f, 1.0f, 0.0f);<br>
  glRotatef(-m_PitchDegrees, 1.0f, 0.0f, 0.0f);<br>
  glBindTexture(GL_TEXTURE_2D, m_GlowTexture); <br>
  glColor4f(r, g, b, a); <br>
  <br>
  glBegin(GL_TRIANGLE_STRIP); <br>
  glTexCoord2f(0.0f, 0.0f); <br>
  glVertex2f(q[0].x, q[0].y);<br>
  glTexCoord2f(0.0f, 1.0f);<br>
  glVertex2f(q[1].x, q[1].y);<br>
  glTexCoord2f(1.0f, 0.0f);<br>
  glVertex2f(q[2].x, q[2].y);<br>
  glTexCoord2f(1.0f, 1.0f);<br>
  glVertex2f(q[3].x, q[3].y);<br>
  glEnd(); <br>
  glPopMatrix(); <br>
  }</p>
<p><span class="theme">//绘制BigGlow形的光晕</span><br>
  void glCamera::RenderBigGlow(GLfloat r, GLfloat g, GLfloat b, GLfloat a, glPoint 
  p, GLfloat scale)<br>
  {<br>
  glPoint q[4];<br>
  <br>
  q[0].x = (p.x - scale); <br>
  q[0].y = (p.y - scale); <br>
  <br>
  q[1].x = (p.x - scale); <br>
  q[1].y = (p.y + scale); <br>
  <br>
  q[2].x = (p.x + scale); <br>
  q[2].y = (p.y - scale); <br>
  <br>
  q[3].x = (p.x + scale); <br>
  q[3].y = (p.y + scale); <br>
  <br>
  glPushMatrix(); <br>
  glTranslatef(p.x, p.y, p.z); <br>
  glRotatef(-m_HeadingDegrees, 0.0f, 1.0f, 0.0f);<br>
  glRotatef(-m_PitchDegrees, 1.0f, 0.0f, 0.0f);<br>
  glBindTexture(GL_TEXTURE_2D, m_BigGlowTexture); <br>
  glColor4f(r, g, b, a); <br>
  <br>
  glBegin(GL_TRIANGLE_STRIP); <br>
  glTexCoord2f(0.0f, 0.0f); <br>
  glVertex2f(q[0].x, q[0].y);<br>
  glTexCoord2f(0.0f, 1.0f);<br>
  glVertex2f(q[1].x, q[1].y);<br>
  glTexCoord2f(1.0f, 0.0f);<br>
  glVertex2f(q[2].x, q[2].y);<br>
  glTexCoord2f(1.0f, 1.0f);<br>
  glVertex2f(q[3].x, q[3].y);<br>
  glEnd(); <br>
  glPopMatrix(); <br>
  }</p>
<p><span class="theme">//绘制Streaks形的光晕</span><br>
  void glCamera::RenderStreaks(GLfloat r, GLfloat g, GLfloat b, GLfloat a, glPoint 
  p, GLfloat scale)<br>
  {<br>
  glPoint q[4];<br>
  <br>
  q[0].x = (p.x - scale); <br>
  q[0].y = (p.y - scale); <br>
  <br>
  q[1].x = (p.x - scale); <br>
  q[1].y = (p.y + scale); <br>
  <br>
  q[2].x = (p.x + scale); <br>
  q[2].y = (p.y - scale); <br>
  <br>
  q[3].x = (p.x + scale); <br>
  q[3].y = (p.y + scale); <br>
  <br>
  glPushMatrix(); <br>
  glTranslatef(p.x, p.y, p.z); <br>
  glRotatef(-m_HeadingDegrees, 0.0f, 1.0f, 0.0f);<br>
  glRotatef(-m_PitchDegrees, 1.0f, 0.0f, 0.0f);<br>
  glBindTexture(GL_TEXTURE_2D, m_StreakTexture); <br>
  glColor4f(r, g, b, a); <br>
  <br>
  glBegin(GL_TRIANGLE_STRIP); <br>
  glTexCoord2f(0.0f, 0.0f); <br>
  glVertex2f(q[0].x, q[0].y);<br>
  glTexCoord2f(0.0f, 1.0f);<br>
  glVertex2f(q[1].x, q[1].y);<br>
  glTexCoord2f(1.0f, 0.0f);<br>
  glVertex2f(q[2].x, q[2].y);<br>
  glTexCoord2f(1.0f, 1.0f);<br>
  glVertex2f(q[3].x, q[3].y);<br>
  glEnd(); <br>
  glPopMatrix(); <br>
  }<br>
</p>
<p></p>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=tl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=tc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
    width="100%"></TD>
    <TD class=tr><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=l><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
      <TD class=back3 vAlign=top width="100%"><p>你可以使用w,s,a,d变换摄像机的方向，1，2显示/关闭各种信息参数。C给摄像机一个固定的速度，X停止它。</p>
        <p>上面就是这个教程的全部了，所有的问题，评论和抱怨都欢迎。当然我不是第一个作这个效果的人，下面是其他方面相关的文章:<br>
          <a href="javascript:if(confirm('http://www.gamedev.net/reference/articles/article874.asp  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.gamedev.net/reference/articles/article874.asp'" tppabs="http://www.gamedev.net/reference/articles/article874.asp">http://www.gamedev.net/reference/articles/article874.asp</a><br>
          <a href="javascript:if(confirm('http://www.gamedev.net/reference/articles/article813.asp  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.gamedev.net/reference/articles/article813.asp'" tppabs="http://www.gamedev.net/reference/articles/article813.asp">http://www.gamedev.net/reference/articles/article813.asp</a><br>
          <a href="javascript:if(confirm('http://www.opengl.org/developers/code/mjktips/lensflare/  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.opengl.org/developers/code/mjktips/lensflare/'" tppabs="http://www.opengl.org/developers/code/mjktips/lensflare/">http://www.opengl.org/developers/code/mjktips/lensflare/</a><br>
          <a href="javascript:if(confirm('http://www.markmorley.com/opengl/frustumculling.html  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://www.markmorley.com/opengl/frustumculling.html'" tppabs="http://www.markmorley.com/opengl/frustumculling.html">http://www.markmorley.com/opengl/frustumculling.html</a><br>
          <a href="javascript:if(confirm('http://oss.sgi.com/projects/ogl-sample/registry/HP/occlusion_test.txt  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://oss.sgi.com/projects/ogl-sample/registry/HP/occlusion_test.txt'" tppabs="http://oss.sgi.com/projects/ogl-sample/registry/HP/occlusion_test.txt">http://oss.sgi.com/projects/ogl-sample/registry/HP/occlusion_test.txt</a><br>
          <a href="javascript:if(confirm('http://oss.sgi.com/projects/ogl-sample/registry/NV/occlusion_query.txt  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://oss.sgi.com/projects/ogl-sample/registry/NV/occlusion_query.txt'" tppabs="http://oss.sgi.com/projects/ogl-sample/registry/NV/occlusion_query.txt">http://oss.sgi.com/projects/ogl-sample/registry/NV/occlusion_query.txt</a> 
        </p>
<table width="100%" border="1">
  <tr>
    <td width="27%"><img src="logo 3.jpg" tppabs="http://www.owlei.com/DancingWind/images/logo%203.jpg" width="209" height="200" align="middle"></td>
    <td width="73%">版权与使用声明:<br>
      我是个对学习和生活充满激情的普通男孩,在网络上我以DancingWind为昵称，我的联系方式是zhouwei02@mails.tsinghua.edu.cn，如果你有任何问题，都可以联系我。
      <p>引子<br>
        网络是一个共享的资源，但我在自己的学习生涯中浪费大量的时间去搜索可用的资料，在现实生活中花费了大量的金钱和时间在书店中寻找资料，于是我给自己起了个昵称DancingWind，其意义是想风一样从各个知识的站点中吸取成长的养料。在飘荡了多年之后，我决定把自己收集的资料整理为一个统一的资源库。</p>
      <p>版权声明<br>
        所有DancingWind发表的内容，大多都来自共享的资源，所以我没有资格把它们据为己有，或声称自己为这些资源作出了一点贡献。故任何人都可以复制，修改，重新发表，甚至以自己的名义发表，我都不会追究，但你在做以上事情的时候必须保证内容的完整性，给后来的人一个完整的教程。最后，任何人不能以这些资料的任何部分，谋取任何形式的报酬。</p>
      <p>发展计划<br>
        在国外，很多资料都是很多人花费几年的时间慢慢积累起来的。如果任何人有兴趣与别人共享你的知识，我很欢迎你与我联系，但你必须同意我上面的声明。</p>
              <p>感谢<br>
                感谢我的母亲一直以来对我的支持和在生活上的照顾。<br>
                感谢我深爱的女友田芹，一直以来默默的在精神上和生活中对我的支持，她甚至把买衣服的钱都用来给我买书了，她真的是我见过的最好的女孩，希望我能带给她幸福。</p>
              <p>资源下载: <br>
                文档 <a href="javascript:if(confirm('http://www.owlei.com/DancingWind/Res/mht/NeHe%20OpenGL%20Chinese%20Course%2044.mht  \n\nThis file was not retrieved by Teleport Pro, because the server reports that this file cannot be found.  \n\nDo you want to open it from the server?'))window.location='http://www.owlei.com/DancingWind/Res/mht/NeHe%20OpenGL%20Chinese%20Course%2044.mht'" tppabs="http://www.owlei.com/DancingWind/Res/mht/NeHe%20OpenGL%20Chinese%20Course%2044.mht">网页格式</a> 
                <a href="javascript:if(confirm('http://www.owlei.com/DancingWind/Res/pdf/OpenGL_Nehe_Course_Tutorial_44.pdf  \n\nThis file was not retrieved by Teleport Pro, because the server reports that this file cannot be found.  \n\nDo you want to open it from the server?'))window.location='http://www.owlei.com/DancingWind/Res/pdf/OpenGL_Nehe_Course_Tutorial_44.pdf'" tppabs="http://www.owlei.com/DancingWind/Res/pdf/OpenGL_Nehe_Course_Tutorial_44.pdf">PDF格式</a><br>
                源码 <a href="javascript:if(confirm('http://www.owlei.com/DancingWind/Res/Src/44_Flare.rar  \n\nThis file was not retrieved by Teleport Pro, because the server reports that this file cannot be found.  \n\nDo you want to open it from the server?'))window.location='http://www.owlei.com/DancingWind/Res/Src/44_Flare.rar'" tppabs="http://www.owlei.com/DancingWind/Res/Src/44_Flare.rar">RAR格式</a></p></td>
  </tr>
</table>
        <FONT class=text>
        <TABLE width="100%" border=0>
          <TBODY>
            <TR> 
              <TD align=left width="50%"><B><FONT size=-1><A 
            href="Tutorial_43.htm" tppabs="http://www.owlei.com/DancingWind/Course/Tutorial_43.htm">&lt; 第43课</A></FONT></B></TD>
              <TD align=right width="50%"><B><FONT 
        size=-1><a href="Tutorial_45.htm" tppabs="http://www.owlei.com/DancingWind/Course/Tutorial_45.htm">第45课 &gt;&nbsp;</a></FONT></B></TD>
            </TR>
          </TBODY>
        </TABLE>
        </FONT> </TD>
    <TD class=r><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=bl><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=bc width="100%"><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" width=28></TD>
    <TD class=br><IMG height=28 alt="" 
      src="blank(1).gif" tppabs="http://www.owlei.com/DancingWind/Pic/blank(1).gif" 
  width=28></TD></TR></TBODY></TABLE>
<PRE>&nbsp;</PRE>
</BODY></HTML>
