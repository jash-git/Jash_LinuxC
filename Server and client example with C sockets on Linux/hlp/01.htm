<!DOCTYPE html>
<!-- saved from url=(0065)http://www.binarytides.com/server-client-example-c-sockets-linux/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<title>Server and client example with C sockets on Linux</title>
<link rel="stylesheet" type="text/css" media="all" href="./01_files/style.css">



<!-- All in One SEO Pack 2.2.7 by Michael Torbert of Semper Fi Web Design[108,185] -->
<meta name="description" itemprop="description" content="In a previous example we learnt about the . In this example we shall build a basic ECHO client and server. The server/client shown here use TCP sockets or">

<link rel="canonical" href="./01_files/01.htm">
<!-- /all in one seo pack -->
<link rel="alternate" type="application/rss+xml" title="BinaryTides Â» Server and client example with C sockets on Linux Comments Feed" href="http://www.binarytides.com/server-client-example-c-sockets-linux/feed/">
		<script async="" src="./01_files/saved_resource"></script><script src="./01_files/quant.js" async="" type="text/javascript"></script><script async="" src="./01_files/fbds.js"></script><script src="./01_files/cb=gapi.loaded_1" async=""></script><script src="./01_files/cb=gapi.loaded_0" async=""></script><script async="" type="text/javascript" src="./01_files/ca-pub-5814774904969415.js"></script><script async="" src="./01_files/analytics.js"></script><script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.binarytides.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script><script src="./01_files/wp-emoji-release.min.js" type="text/javascript"></script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel="stylesheet" id="yarppWidgetCss-css" href="./01_files/widget.css" type="text/css" media="all">
<link rel="stylesheet" id="contact-form-7-css" href="./01_files/styles.css" type="text/css" media="all">
<link rel="stylesheet" id="digg-digg-css" href="./01_files/diggdigg-style.css" type="text/css" media="screen">
<script type="text/javascript" src="./01_files/jquery.js"></script>
<script type="text/javascript" src="./01_files/jquery-migrate.min.js"></script>
<script type="text/javascript" src="./01_files/jquery.lazyload.min.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.binarytides.com/blog/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.binarytides.com/blog/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="Best puzzle solving games for ubuntu" href="http://www.binarytides.com/best-puzzle-solving-games-for-ubuntu/">
<link rel="next" title="Display last modified date of posts in wordpress" href="http://www.binarytides.com/display-last-modified-date-of-posts-in-wordpress/">
<meta name="generator" content="WordPress 4.2.2">
<link rel="shortlink" href="http://www.binarytides.com/?p=2306">

<!-- Schema.org markup for Google+ --> 
<meta itemprop="name" content="Server and client example with C sockets on Linux"> 
<meta itemprop="description" content="Last Updated On : 27th November 2012">


<!-- Open Graph data -->
<meta property="og:title" content="Server and client example with C sockets on Linux">
<meta property="og:type" content="article">
<meta property="og:url" content="http://www.binarytides.com/server-client-example-c-sockets-linux/">
<meta property="og:description" content="Last Updated On : 27th November 2012">
<meta property="og:site_name" content="BinaryTides">

<!-- Twitter Card data -->
<meta name="twitter:card" content="summary">
<meta name="twitter:site" content="@binarytides">
<meta name="twitter:title" content="Server and client example with C sockets on Linux">
<meta name="twitter:description" content="Last Updated On : 27th November 2012">
<meta name="twitter:creator" content="@binarytides">
<!-- Twitter summary card with large image must be at least 280x150px -->
<meta name="twitter:image:src" content="">

	<!-- google analytics -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-2702686-20', 'auto');
  ga('send', 'pageview');

</script>

<!-- Google Plus Publisher Markup -->
<link href="https://plus.google.com/+binarytides" rel="publisher"><style type="text/css">
img.lazy { display: none; }
</style>
<script type="text/javascript">
	window._wp_rp_static_base_url = 'https://wprp.zemanta.com/static/';
	window._wp_rp_wp_ajax_url = "http://www.binarytides.com/blog/wp-admin/admin-ajax.php";
	window._wp_rp_plugin_version = '3.5.4';
	window._wp_rp_post_id = '2306';
	window._wp_rp_num_rel_posts = '6';
	window._wp_rp_thumbnails = true;
	window._wp_rp_post_title = 'Server+and+client+example+with+C+sockets+on+Linux';
	window._wp_rp_post_tags = ['socket+programming', 'c', 'lt', 'build', 'linux', 'a', 'concept', 'web', 'orient', 'connect', 'socket', 'incom', 'detect', 'server', 'port', 'program', 'stream'];
	window._wp_rp_promoted_content = true;
</script>
<script type="text/javascript" src="./01_files/loader.js" async=""></script>
<link rel="stylesheet" href="http://www.binarytides.com/blog/wp-content/plugins/wordpress-23-related-posts-plugin/static/themes/modern.css?version=3.5.4">
<link rel="stylesheet" type="text/css" href="./01_files/shCore.css"><link rel="stylesheet" type="text/css" href="./01_files/shThemeDefault.css"><style type="text/css" id="syntaxhighlighteranchor"></style>

<link href="./01_files/css" rel="stylesheet" type="text/css">
<link href="./01_files/css(1)" rel="stylesheet" type="text/css">
<link href="./01_files/css(2)" rel="stylesheet" type="text/css">

<script src="./01_files/secureAnonymousFramework"></script><script type="text/javascript" async="" src="./01_files/embed.js"></script><script async="" type="text/javascript" src="./01_files/count.js"></script><style type="text/css">* html #li_ui_li_gen_1434869697976_0 a#li_ui_li_gen_1434869697976_0-link{height:1% !important;}#li_ui_li_gen_1434869697976_0{position:relative !important;overflow:visible !important;display:block !important;}#li_ui_li_gen_1434869697976_0 span{-webkit-box-sizing:content-box !important;-moz-box-sizing:content-box !important;box-sizing:content-box !important;}#li_ui_li_gen_1434869697976_0 a#li_ui_li_gen_1434869697976_0-link{border:0 !important;height:20px !important;text-decoration:none !important;padding:0 !important;margin:0 !important;display:inline-block !important;}#li_ui_li_gen_1434869697976_0 a#li_ui_li_gen_1434869697976_0-link:link, #li_ui_li_gen_1434869697976_0 a#li_ui_li_gen_1434869697976_0-link:visited, #li_ui_li_gen_1434869697976_0 a#li_ui_li_gen_1434869697976_0-link:hover, #li_ui_li_gen_1434869697976_0 a#li_ui_li_gen_1434869697976_0-link:active{border:0 !important;text-decoration:none !important;}#li_ui_li_gen_1434869697976_0 a#li_ui_li_gen_1434869697976_0-link:after{content:"." !important;display:block !important;clear:both !important;visibility:hidden !important;line-height:0 !important;height:0 !important;}#li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-logo{background-image:url(https://static.licdn.com/scds/common/u/images/apps/connect/sprites/sprite_connect_v14.png) !important;background-position:0px -593px !important;background-repeat:no-repeat !important;background-color:#0077b5 !important;background-size:initial !important;cursor:pointer !important;border:0 !important;border-right:1px solid #066094 !important;text-indent:-9999em !important;overflow:hidden !important;padding:0 !important;margin:0 !important;position:absolute !important;left:0px !important;top:0px !important;display:block !important;width:20px !important;height:20px !important;float:right !important;border-radius:2px !important;-webkit-border-radius:2px !important;border-top-right-radius:2px !important;border-bottom-right-radius:2px !important;-webkit-border-top-right-radius:2px !important;-webkit-border-bottom-right-radius:2px !important;}#li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-title{color:#fff !important;cursor:pointer !important;display:block !important;white-space:nowrap !important;float:left !important;margin-left:1px !important;vertical-align:top !important;overflow:hidden !important;text-align:center !important;height:18px !important;padding:0 4px 0 23px !important;border:1px solid #000 !important;border-top-color:#0077b5 !important;border-right-color:#0077b5 !important;border-bottom-color:#0077b5 !important;border-left-color:#0077b5 !important;text-shadow:0 -1px #005887 !important;line-height:20px !important;border-radius:2px !important;-webkit-border-radius:2px !important;border-top-right-radius:2px !important;border-bottom-right-radius:2px !important;-webkit-border-top-right-radius:2px !important;-webkit-border-bottom-right-radius:2px !important;background-color:#0077b5 !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#0077b5), color-stop(100%,#0077b5)) !important; background-image: -webkit-linear-gradient(top, #0077b5 0%, #0077b5 100%) !important;}#li_ui_li_gen_1434869697976_0.hovered #li_ui_li_gen_1434869697976_0-title{border:1px solid #000 !important;border-top-color:#0369a0 !important;border-right-color:#0369a0 !important;border-bottom-color:#0369a0 !important;border-left-color:#0369a0 !important;background-color:#0369a0 !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#0369a0), color-stop(100%,#0369a0)) !important; background-image: -webkit-linear-gradient(top, #0369a0 0%, #0369a0 100%) !important;}#li_ui_li_gen_1434869697976_0.clicked #li_ui_li_gen_1434869697976_0-title, #li_ui_li_gen_1434869697976_0.down #li_ui_li_gen_1434869697976_0-title{color:#fff !important;border:1px solid #000 !important;border-top-color:#066094 !important;border-right-color:#066094 !important;border-bottom-color:#066094 !important;border-left-color:#066094 !important;background-color:#066094 !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#066094), color-stop(100%,#066094)) !important; background-image: -webkit-linear-gradient(top, #066094 0%, #066094 100%) !important;}.IN-shadowed #li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-title{}.IN-shadowed #li_ui_li_gen_1434869697976_0.hovered #li_ui_li_gen_1434869697976_0-title{}.IN-shadowed #li_ui_li_gen_1434869697976_0.clicked #li_ui_li_gen_1434869697976_0-title, .IN-shadowed #li_ui_li_gen_1434869697976_0.down #li_ui_li_gen_1434869697976_0-title{}#li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-title-text, #li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-title-text *{color:#fff !important;font-size:11px !important;font-family:Arial, sans-serif !important;font-weight:bold !important;font-style:normal !important;-webkit-font-smoothing:antialiased !important;display:inline-block !important;background:transparent none !important;vertical-align:top !important;height:18px !important;line-height:20px !important;float:none !important;}#li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-title-text strong{font-weight:bold !important;}#li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-title-text em{font-style:italic !important;}#li_ui_li_gen_1434869697976_0.hovered #li_ui_li_gen_1434869697976_0-title-text, #li_ui_li_gen_1434869697976_0.hovered #li_ui_li_gen_1434869697976_0-title-text *{color:#fff !important;}#li_ui_li_gen_1434869697976_0.clicked #li_ui_li_gen_1434869697976_0-title-text, #li_ui_li_gen_1434869697976_0.down #li_ui_li_gen_1434869697976_0-title-text, #li_ui_li_gen_1434869697976_0.clicked #li_ui_li_gen_1434869697976_0-title-text *, #li_ui_li_gen_1434869697976_0.down #li_ui_li_gen_1434869697976_0-title-text *{color:#fff !important;}#li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-title #li_ui_li_gen_1434869697976_0-mark{display:inline-block !important;width:0px !important;overflow:hidden !important;}.success #li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-title{color:#fff !important;border-top-color:#0077b5 !important;border-right-color:#0077b5 !important;border-bottom-color:#0077b5 !important;border-left-color:#0077b5 !important;background-color:#0077b5 !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#0077b5), color-stop(100%,#0077b5)) !important; background-image: -webkit-linear-gradient(top, #0077b5 0%, #0077b5 100%) !important;}.success #li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-title-text, .success #li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-title-text *{color:#fff !important;}.IN-shadowed .success #li_ui_li_gen_1434869697976_0 #li_ui_li_gen_1434869697976_0-title{}.success #li_ui_li_gen_1434869697976_0.hovered #li_ui_li_gen_1434869697976_0-title{color:#fff !important;border-top-color:#0369a0 !important;border-right-color:#0369a0 !important;border-bottom-color:#0369a0 !important;border-left-color:#0369a0 !important;background-color:#0369a0 !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#0369a0), color-stop(100%,#0369a0)) !important; background-image: -webkit-linear-gradient(top, #0369a0 0%, #0369a0 100%) !important;}.success #li_ui_li_gen_1434869697976_0.hovered #li_ui_li_gen_1434869697976_0-title-text, .success #li_ui_li_gen_1434869697976_0.hovered #li_ui_li_gen_1434869697976_0-title-text *{color:#fff !important;}.success #li_ui_li_gen_1434869697976_0.clicked #li_ui_li_gen_1434869697976_0-title, .success #li_ui_li_gen_1434869697976_0.down #li_ui_li_gen_1434869697976_0-title{color:#fff !important;border-top-color:#066094 !important;border-right-color:#066094 !important;border-bottom-color:#066094 !important;border-left-color:#066094 !important;background-color:#066094 !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#066094), color-stop(100%,#066094)) !important; background-image: -webkit-linear-gradient(top, #066094 0%, #066094 100%) !important;}.success #li_ui_li_gen_1434869697976_0.clicked #li_ui_li_gen_1434869697976_0-title-text, .success #li_ui_li_gen_1434869697976_0.down #li_ui_li_gen_1434869697976_0-title-text, .success #li_ui_li_gen_1434869697976_0.clicked #li_ui_li_gen_1434869697976_0-title-text *, .success #li_ui_li_gen_1434869697976_0.down #li_ui_li_gen_1434869697976_0-title-text *{color:#fff !important;}.IN-shadowed .success #li_ui_li_gen_1434869697976_0.clicked #li_ui_li_gen_1434869697976_0-title, .IN-shadowed .success #li_ui_li_gen_1434869697976_0.down #li_ui_li_gen_1434869697976_0-title{}#li_ui_li_gen_1434869698029_1-container.IN-top {display:inline-block !important;overflow:visible !important;position:relative !important;height:42px !important;line-height:1px !important;cursor:pointer !important;}#li_ui_li_gen_1434869698029_1.IN-top {display:inline-block !important;height:42px !important;width:60px !important;text-align:center !important;background-image:url(https://static.licdn.com/scds/common/u/images/apps/connect/sprites/sprite_connect_v14.png) !important;background-color:transparent !important;background-repeat:no-repeat !important;background-position:-207px -470px !important;}#li_ui_li_gen_1434869698029_1-content.IN-top {display:inline !important;font-size:16px !important;color:#4e4e4e !important;font-weight:bold !important;font-family:Arial, sans-serif !important;line-height:38px !important;}#li_ui_li_gen_1434869698029_1-container.IN-empty #li_ui_li_gen_1434869698029_1-inner.IN-top {background-image:url(https://static.licdn.com/scds/common/u/images/apps/connect/sprites/sprite_connect_v14.png) !important;background-color:transparent !important;background-repeat:no-repeat !important;background-position:0px -560px !important;background-size:initial !important;overflow:hidden !important;margin:4px auto 0 auto !important;width:28px !important;height:28px !important;display:block !important;}#li_ui_li_gen_1434869698029_1-container.IN-empty #li_ui_li_gen_1434869698029_1-content.IN-top {text-indent:-999px !important;display:inline-block !important;}#li_ui_li_gen_1434869698029_1-container.IN-hidden #li_ui_li_gen_1434869698029_1 {display:none !important;}</style><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}.fb_link img{border:none}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_reset .fb_dialog_legacy{overflow:visible}.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.fb_dialog_content{background:#fff;color:#333}.fb_dialog_close_icon{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif);cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}.fb_dialog_close_icon:active{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}.fb_dialog_loader{background-color:#f6f7f8;border:1px solid #606060;font-size:24px;padding:20px}.fb_dialog_top_left,.fb_dialog_top_right,.fb_dialog_bottom_left,.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}.fb_dialog_top_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}.fb_dialog_top_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}.fb_dialog_bottom_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}.fb_dialog_bottom_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}.fb_dialog_vert_left,.fb_dialog_vert_right,.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}.fb_dialog_vert_left,.fb_dialog_vert_right{width:10px;height:100%}.fb_dialog_vert_left{margin-left:-10px}.fb_dialog_vert_right{right:0;margin-right:-10px}.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{width:100%;height:10px}.fb_dialog_horiz_top{margin-top:-10px}.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #3a5795;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{-webkit-transform:none;height:100%;margin:0;overflow:visible;position:absolute;top:-10000px;left:0;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{max-height:590px;min-height:590px;max-width:500px;min-width:500px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;left:0;top:0;width:100%;min-height:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#4966A6), color-stop(.5, #355492), to(#2A4887));border:1px solid #2f477a;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset, rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f6f7f8;border:1px solid #555;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_hide_iframes iframe{position:relative;left:-10000px}.fb_iframe_widget_loader{position:relative;display:inline-block}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}.fb_iframe_widget_loader .FB_Loader{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}</style><script async="" src="./01_files/count-data.js"></script><script src="./01_files/alfie.f51946af45e0b561c60f768335c9eb79.js" async="" charset="UTF-8"></script></head>
<body data-twttr-rendered="true">

<!-- Begin #wrapper -->
<div id="wrapper">
	<!-- Begin #header -->
	<div id="header">
	<div id="header2">
		<div id="logo"><a href="http://www.binarytides.com/">BinaryTides</a></div>

		<!-- Begin #topMenuRight -->
			<div id="topMenuRight">
			
			</div>
		<!-- End #topMenuRight -->
	</div>
	</div>
	<!-- End #header -->



	<!-- Begin #nav_menu -->
	<div id="nav_menu">
	<div id="nav_menu_contents">
	<!-- Begin #topMenu -->
	<div id="topMenu" class="ddsmoothmenu"><ul id="menu-header-navigation" class="menu"><li id="menu-item-7601" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-7601"><a href="http://www.binarytides.com/">Home</a></li>
<li id="menu-item-7528" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7528"><a href="http://www.binarytides.com/category/apps/">Apps</a></li>
<li id="menu-item-7530" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor menu-item-has-children menu-item-7530"><a href="http://www.binarytides.com/category/programming/">Coding</a>
<ul class="sub-menu">
	<li id="menu-item-7532" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-7532"><a href="http://www.binarytides.com/category/programming/html5-2/">Html5</a>
	<ul class="sub-menu">
		<li id="menu-item-7533" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7533"><a href="http://www.binarytides.com/category/programming/html5-2/box2d-game-programming/">Box2d</a></li>
	</ul>
</li>
	<li id="menu-item-7534" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7534"><a href="http://www.binarytides.com/category/programming/javascript/">Javascript</a></li>
	<li id="menu-item-7531" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7531"><a href="http://www.binarytides.com/category/programming/database/">Database</a></li>
	<li id="menu-item-7535" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-7535"><a href="http://www.binarytides.com/category/programming/php-tutorials/">PHP</a>
	<ul class="sub-menu">
		<li id="menu-item-7536" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7536"><a href="http://www.binarytides.com/category/programming/php-tutorials/php-snippets/">Php Snippets</a></li>
		<li id="menu-item-7537" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7537"><a href="http://www.binarytides.com/category/programming/php-tutorials/tutorial/">Tutorial</a></li>
	</ul>
</li>
	<li id="menu-item-7538" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor menu-item-has-children menu-item-7538"><a href="http://www.binarytides.com/category/programming/sockets/">Socket Programming</a>
	<ul class="sub-menu">
		<li id="menu-item-7539" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-7539"><a href="http://www.binarytides.com/category/programming/sockets/c-sockets/">C</a></li>
		<li id="menu-item-7540" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7540"><a href="http://www.binarytides.com/category/programming/sockets/java-sockets-sockets/">Java</a></li>
		<li id="menu-item-7541" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7541"><a href="http://www.binarytides.com/category/programming/sockets/perl/">Perl</a></li>
		<li id="menu-item-7542" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7542"><a href="http://www.binarytides.com/category/programming/sockets/php-sockets-sockets/">PHP</a></li>
		<li id="menu-item-7543" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7543"><a href="http://www.binarytides.com/category/programming/sockets/python-sockets-sockets/">Python</a></li>
		<li id="menu-item-7544" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7544"><a href="http://www.binarytides.com/category/programming/sockets/winsock-sockets/">Winsock</a></li>
	</ul>
</li>
</ul>
</li>
<li id="menu-item-7545" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-7545"><a href="http://www.binarytides.com/category/distros/">Distros</a>
<ul class="sub-menu">
	<li id="menu-item-7546" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7546"><a href="http://www.binarytides.com/category/distros/centos-linux/">CentOS</a></li>
	<li id="menu-item-7547" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7547"><a href="http://www.binarytides.com/category/distros/debian-linux/">Debian</a></li>
	<li id="menu-item-7548" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7548"><a href="http://www.binarytides.com/category/distros/fedora-linux/">Fedora</a></li>
	<li id="menu-item-7549" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7549"><a href="http://www.binarytides.com/category/distros/linux-mint/">Linux Mint</a></li>
	<li id="menu-item-7550" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7550"><a href="http://www.binarytides.com/category/distros/opensuse/">openSuse</a></li>
	<li id="menu-item-7551" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7551"><a href="http://www.binarytides.com/category/distros/ubuntu-2/">Ubuntu</a></li>
</ul>
</li>
<li id="menu-item-7552" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-7552"><a href="http://www.binarytides.com/category/general/">General</a>
<ul class="sub-menu">
	<li id="menu-item-7555" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7555"><a href="http://www.binarytides.com/category/general/freelancing-general/">Freelancing</a></li>
	<li id="menu-item-7556" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7556"><a href="http://www.binarytides.com/category/general/networking-2/">Networking</a></li>
	<li id="menu-item-7557" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7557"><a href="http://www.binarytides.com/category/general/virtualbox/">Virtualbox</a></li>
	<li id="menu-item-7558" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7558"><a href="http://www.binarytides.com/category/general/windows/">Windows</a></li>
	<li id="menu-item-7559" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7559"><a href="http://www.binarytides.com/category/general/windows/windows-8/">Windows 8</a></li>
</ul>
</li>
<li id="menu-item-7561" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-7561"><a href="http://www.binarytides.com/category/linux/">Linux</a>
<ul class="sub-menu">
	<li id="menu-item-7562" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7562"><a href="http://www.binarytides.com/category/linux/hardware/">Hardware</a></li>
	<li id="menu-item-7563" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7563"><a href="http://www.binarytides.com/category/linux/linux-commands-linux/">Linux Commands</a></li>
</ul>
</li>
<li id="menu-item-7564" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7564"><a href="http://www.binarytides.com/category/reviews/">Reviews</a></li>
<li id="menu-item-7565" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-7565"><a href="http://www.binarytides.com/category/security/">Security</a>
<ul class="sub-menu">
	<li id="menu-item-7566" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7566"><a href="http://www.binarytides.com/category/security/burp-suite-hacking-2/">Burp Suite</a></li>
	<li id="menu-item-7567" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7567"><a href="http://www.binarytides.com/category/security/kali-linux-hacking-2/">Kali Linux</a></li>
	<li id="menu-item-7568" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7568"><a href="http://www.binarytides.com/category/security/metasploit-hacking-2/">Metasploit</a></li>
</ul>
</li>
<li id="menu-item-7569" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-7569"><a href="http://www.binarytides.com/category/server-2/">Server</a>
<ul class="sub-menu">
	<li id="menu-item-7570" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7570"><a href="http://www.binarytides.com/category/server-2/ftp-server-2/">FTP</a></li>
	<li id="menu-item-7571" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7571"><a href="http://www.binarytides.com/category/server-2/http-server-2/">Http</a></li>
	<li id="menu-item-7572" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7572"><a href="http://www.binarytides.com/category/server-2/monitoring/">Monitoring</a></li>
	<li id="menu-item-7573" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7573"><a href="http://www.binarytides.com/category/server-2/smtp/">Smtp</a></li>
</ul>
</li>
<li id="menu-item-7574" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7574"><a href="http://www.binarytides.com/category/super-tips/">Super Tips</a></li>
</ul></div>			
	<!-- End #topMenu -->
	</div>
	</div>
	<!-- End #nav_menu -->


	<!-- Begin #content -->
	<div id="content" class="clearfix">	<div id="title">

				<h1>Server and client example with C sockets on Linux</h1>



<div class="postMetaSingle" style="overflow:hidden;">

<div class="info" style="font-size:90%; float:left;">

	
	<a class="category" href="http://www.binarytides.com/category/programming/sockets/c-sockets/" title="View all posts in C">C</a>	
	<!-- author and date -->
	<span style="margin-left:15px;">By</span> 
	<span style="color: #07c;">Silver Moon</span> 

	<!-- date -->
	<span style="margin-left:15px;">On</span> 
	<span style="color: #07c;">Jul 30, 2012</span>
	
	<!-- comments link -->
	<span style="margin-left:15px;">
		<a href="http://www.binarytides.com/server-client-example-c-sockets-linux/#disqus_thread" data-disqus-identifier="2306 http://www.binarytides.com/blog/?p=2306">36 Comments</a>	</span>
</div>
<!-- info div close -->	

	<!-- social links -->
	<div class="social">

	<div style="display:inline-block; float:left; width:90px;">

<iframe src="./01_files/like(1).html" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:450px; height:21px;" allowtransparency="true"></iframe>


	</div>
	<div style="display:inline-block;">
		<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 90px; height: 20px; background: transparent;"><iframe frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 90px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" tabindex="0" vspace="0" width="100%" id="I0_1434869695330" name="I0_1434869695330" src="./01_files/fastbutton.html" data-gapiattached="true" title="+1"></iframe></div>
	</div>
	<div style="display:inline-block;">
		<iframe id="twitter-widget-0" scrolling="no" frameborder="0" allowtransparency="true" src="./01_files/tweet_button.c197f64a14a7434e6e58ca9722b54406.en.html" class="twitter-share-button twitter-tweet-button twitter-share-button twitter-count-horizontal" title="Twitter Tweet Button" data-twttr-rendered="true" style="position: static; visibility: visible; width: 81px; height: 20px;"></iframe>
	</div>
	</div>

</div>


</div>

<div id="colwrap">
<!-- Begin #colLeft -->
		<div id="colLeft">
		<div id="colLeftInner">
		<!-- Begin .postBox -->
		<div class="postBox">

			<div class="postBoxMid">
				<div class="postBoxMidInner first clearfix">






				

<a id="dd_start"></a><div id="post_start"></div>
<p>In a previous example we learnt about the <a href="http://www.binarytides.com/socket-programming-c-linux-tutorial/">basics of socket programming in C</a>. In this example we shall build a basic ECHO client and server. The server/client shown here use TCP sockets or SOCK_STREAM.
</p><pre class="adflexi"><div class="adcontent">
<script async="" src="./01_files/adsbygoogle.js"></script>
<!-- binarytides.com 336x280 post top -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-5814774904969415" data-ad-slot="0700059493" data-adsbygoogle-status="done"><ins id="aswift_0_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><iframe width="336" height="280" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

</div>
</pre>
<p><!-- Time : 6.2942504882812E-5, Pos : 226 --></p>
<p>Tcp sockets are connection oriented, means that they have a concept of independant connection on a certain port which one application can use at a time. The concept of connection makes TCP a "reliable" stream such that if errors occur, they can be detected and compensated for by resending the failed packets.</p>
<h3>Server</h3>
<p>Lets build a very simple web server. The steps to make a webserver are as follows :</p>
<p>1. Create socket<br>
2. Bind to address and port<br>
3. Put in listening mode<br>
4. Accept connections and process there after.</p>
<p>Quick example</p>
<div><div id="highlighter_673115" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div><div class="line number67 index66 alt2">67</div><div class="line number68 index67 alt1">68</div><div class="line number69 index68 alt2">69</div><div class="line number70 index69 alt1">70</div><div class="line number71 index70 alt2">71</div><div class="line number72 index71 alt1">72</div><div class="line number73 index72 alt2">73</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/*</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">C socket server example</code></div><div class="line number3 index2 alt2"><code class="cpp comments">*/</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp preprocessor">#include&lt;stdio.h&gt;</code></div><div class="line number6 index5 alt1"><code class="cpp preprocessor">#include&lt;string.h&gt;&nbsp;&nbsp;&nbsp; //strlen</code></div><div class="line number7 index6 alt2"><code class="cpp preprocessor">#include&lt;sys/socket.h&gt;</code></div><div class="line number8 index7 alt1"><code class="cpp preprocessor">#include&lt;arpa/inet.h&gt; //inet_addr</code></div><div class="line number9 index8 alt2"><code class="cpp preprocessor">#include&lt;unistd.h&gt;&nbsp;&nbsp;&nbsp; //write</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">argc , </code><code class="cpp color1 bold">char</code> <code class="cpp plain">*argv[])</code></div><div class="line number12 index11 alt1"><code class="cpp plain">{</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">socket_desc , client_sock , c , read_size;</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">sockaddr_in server , client;</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">client_message[2000];</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Create socket</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">socket_desc = socket(AF_INET , SOCK_STREAM , 0);</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(socket_desc == -1)</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Could not create socket"</code><code class="cpp plain">);</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Socket created"</code><code class="cpp plain">);</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Prepare the sockaddr_in structure</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">server.sin_family = AF_INET;</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">server.sin_addr.s_addr = INADDR_ANY;</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">server.sin_port = htons( 8888 );</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Bind</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">( bind(socket_desc,(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">sockaddr *)&amp;server , </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(server)) &lt; 0)</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//print the error message</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"bind failed. Error"</code><code class="cpp plain">);</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"bind done"</code><code class="cpp plain">);</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Listen</code></div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">listen(socket_desc , 3);</code></div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Accept and incoming connection</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Waiting for incoming connections..."</code><code class="cpp plain">);</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">c = </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">sockaddr_in);</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//accept connection from an incoming client</code></div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">client_sock = accept(socket_desc, (</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">sockaddr *)&amp;client, (socklen_t*)&amp;c);</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(client_sock &lt; 0)</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number50 index49 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"accept failed"</code><code class="cpp plain">);</code></div><div class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div><div class="line number52 index51 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number53 index52 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Connection accepted"</code><code class="cpp plain">);</code></div><div class="line number54 index53 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number55 index54 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Receive a message from client</code></div><div class="line number56 index55 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code><code class="cpp plain">( (read_size = recv(client_sock , client_message , 2000 , 0)) &gt; 0 )</code></div><div class="line number57 index56 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number58 index57 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Send the message back to client</code></div><div class="line number59 index58 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">write(client_sock , client_message , </code><code class="cpp functions bold">strlen</code><code class="cpp plain">(client_message));</code></div><div class="line number60 index59 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number61 index60 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number62 index61 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(read_size == 0)</code></div><div class="line number63 index62 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number64 index63 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Client disconnected"</code><code class="cpp plain">);</code></div><div class="line number65 index64 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">fflush</code><code class="cpp plain">(stdout);</code></div><div class="line number66 index65 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number67 index66 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp keyword bold">if</code><code class="cpp plain">(read_size == -1)</code></div><div class="line number68 index67 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number69 index68 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"recv failed"</code><code class="cpp plain">);</code></div><div class="line number70 index69 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number71 index70 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number72 index71 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number73 index72 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<pre class="adwrap" style="border:1px solid #ddd; text-align:center; background:#fafafa; white-space:normal; height:90px;">
<script async="" src="./01_files/adsbygoogle.js"></script>
<!-- binarytides.com post middle horizontal -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-5814774904969415" data-ad-slot="7125586293" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent"><ins id="aswift_1_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent"><iframe width="728" height="90" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

</pre>
<p><!-- Time : 0.00037503242492676 --></p>
<p>The above code example will start a server on localhost (127.0.0.1) port 8888<br>
Once it receives a connection, it will read some input from the client and reply back with the same message.<br>
To test the server run the server and then connect from another terminal using the telnet command like this</p>
<div class="highlight">
$ telnet localhost 8888
</div>
<h3>Client</h3>
<p>Now instead of using the telnet program as a client, why not write our own client program. Quite simple again</p>
<div><div id="highlighter_398336" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/*</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">C ECHO client example using sockets</code></div><div class="line number3 index2 alt2"><code class="cpp comments">*/</code></div><div class="line number4 index3 alt1"><code class="cpp preprocessor">#include&lt;stdio.h&gt; //printf</code></div><div class="line number5 index4 alt2"><code class="cpp preprocessor">#include&lt;string.h&gt;&nbsp;&nbsp;&nbsp; //strlen</code></div><div class="line number6 index5 alt1"><code class="cpp preprocessor">#include&lt;sys/socket.h&gt;&nbsp;&nbsp;&nbsp; //socket</code></div><div class="line number7 index6 alt2"><code class="cpp preprocessor">#include&lt;arpa/inet.h&gt; //inet_addr</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">argc , </code><code class="cpp color1 bold">char</code> <code class="cpp plain">*argv[])</code></div><div class="line number10 index9 alt1"><code class="cpp plain">{</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">sock;</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">sockaddr_in server;</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">message[1000] , server_reply[2000];</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Create socket</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">sock = socket(AF_INET , SOCK_STREAM , 0);</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(sock == -1)</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Could not create socket"</code><code class="cpp plain">);</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Socket created"</code><code class="cpp plain">);</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">server.sin_addr.s_addr = inet_addr(</code><code class="cpp string">"127.0.0.1"</code><code class="cpp plain">);</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">server.sin_family = AF_INET;</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">server.sin_port = htons( 8888 );</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Connect to remote server</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(connect(sock , (</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">sockaddr *)&amp;server , </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(server)) &lt; 0)</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"connect failed. Error"</code><code class="cpp plain">);</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Connected\n"</code><code class="cpp plain">);</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//keep communicating with server</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code><code class="cpp plain">(1)</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Enter message : "</code><code class="cpp plain">);</code></div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">scanf</code><code class="cpp plain">(</code><code class="cpp string">"%s"</code> <code class="cpp plain">, message);</code></div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Send some data</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">( send(sock , message , </code><code class="cpp functions bold">strlen</code><code class="cpp plain">(message) , 0) &lt; 0)</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Send failed"</code><code class="cpp plain">);</code></div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Receive a reply from the server</code></div><div class="line number50 index49 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">( recv(sock , server_reply , 2000 , 0) &lt; 0)</code></div><div class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number52 index51 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"recv failed"</code><code class="cpp plain">);</code></div><div class="line number53 index52 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div class="line number54 index53 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number55 index54 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number56 index55 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Server reply :"</code><code class="cpp plain">);</code></div><div class="line number57 index56 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(server_reply);</code></div><div class="line number58 index57 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number59 index58 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number60 index59 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">close(sock);</code></div><div class="line number61 index60 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number62 index61 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>The above program will connect to localhost port 8888 and then ask for commands to send. Here is an example, how the output would look</p>
<div class="highlight">
$ gcc client.c &amp;&amp; ./a.out<br>
Socket created<br>
Connected<p></p>
<p>Enter message : hi<br>
Server reply :<br>
hi<br>
Enter message : how are you
</p></div>
<h3>Server to handle multiple connections</h3>
<p>The server in the above example has a drawback. It can handle communication with only 1 client. Thats not very useful. One way to work around this is by using threads. A thread can be assigned for each connected client which will handle communication with the client.</p>
<p>Code example</p>
<div><div id="highlighter_87500" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div><div class="line number67 index66 alt2">67</div><div class="line number68 index67 alt1">68</div><div class="line number69 index68 alt2">69</div><div class="line number70 index69 alt1">70</div><div class="line number71 index70 alt2">71</div><div class="line number72 index71 alt1">72</div><div class="line number73 index72 alt2">73</div><div class="line number74 index73 alt1">74</div><div class="line number75 index74 alt2">75</div><div class="line number76 index75 alt1">76</div><div class="line number77 index76 alt2">77</div><div class="line number78 index77 alt1">78</div><div class="line number79 index78 alt2">79</div><div class="line number80 index79 alt1">80</div><div class="line number81 index80 alt2">81</div><div class="line number82 index81 alt1">82</div><div class="line number83 index82 alt2">83</div><div class="line number84 index83 alt1">84</div><div class="line number85 index84 alt2">85</div><div class="line number86 index85 alt1">86</div><div class="line number87 index86 alt2">87</div><div class="line number88 index87 alt1">88</div><div class="line number89 index88 alt2">89</div><div class="line number90 index89 alt1">90</div><div class="line number91 index90 alt2">91</div><div class="line number92 index91 alt1">92</div><div class="line number93 index92 alt2">93</div><div class="line number94 index93 alt1">94</div><div class="line number95 index94 alt2">95</div><div class="line number96 index95 alt1">96</div><div class="line number97 index96 alt2">97</div><div class="line number98 index97 alt1">98</div><div class="line number99 index98 alt2">99</div><div class="line number100 index99 alt1">100</div><div class="line number101 index100 alt2">101</div><div class="line number102 index101 alt1">102</div><div class="line number103 index102 alt2">103</div><div class="line number104 index103 alt1">104</div><div class="line number105 index104 alt2">105</div><div class="line number106 index105 alt1">106</div><div class="line number107 index106 alt2">107</div><div class="line number108 index107 alt1">108</div><div class="line number109 index108 alt2">109</div><div class="line number110 index109 alt1">110</div><div class="line number111 index110 alt2">111</div><div class="line number112 index111 alt1">112</div><div class="line number113 index112 alt2">113</div><div class="line number114 index113 alt1">114</div><div class="line number115 index114 alt2">115</div><div class="line number116 index115 alt1">116</div><div class="line number117 index116 alt2">117</div><div class="line number118 index117 alt1">118</div><div class="line number119 index118 alt2">119</div><div class="line number120 index119 alt1">120</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/*</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">C socket server example, handles multiple clients using threads</code></div><div class="line number3 index2 alt2"><code class="cpp comments">*/</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp preprocessor">#include&lt;stdio.h&gt;</code></div><div class="line number6 index5 alt1"><code class="cpp preprocessor">#include&lt;string.h&gt;&nbsp;&nbsp;&nbsp; //strlen</code></div><div class="line number7 index6 alt2"><code class="cpp preprocessor">#include&lt;stdlib.h&gt;&nbsp;&nbsp;&nbsp; //strlen</code></div><div class="line number8 index7 alt1"><code class="cpp preprocessor">#include&lt;sys/socket.h&gt;</code></div><div class="line number9 index8 alt2"><code class="cpp preprocessor">#include&lt;arpa/inet.h&gt; //inet_addr</code></div><div class="line number10 index9 alt1"><code class="cpp preprocessor">#include&lt;unistd.h&gt;&nbsp;&nbsp;&nbsp; //write</code></div><div class="line number11 index10 alt2"><code class="cpp preprocessor">#include&lt;pthread.h&gt; //for threading , link with lpthread</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="cpp comments">//the thread function</code></div><div class="line number14 index13 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">*connection_handler(</code><code class="cpp keyword bold">void</code> <code class="cpp plain">*);</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">argc , </code><code class="cpp color1 bold">char</code> <code class="cpp plain">*argv[])</code></div><div class="line number17 index16 alt2"><code class="cpp plain">{</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">socket_desc , client_sock , c , *new_sock;</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">sockaddr_in server , client;</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Create socket</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">socket_desc = socket(AF_INET , SOCK_STREAM , 0);</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(socket_desc == -1)</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Could not create socket"</code><code class="cpp plain">);</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Socket created"</code><code class="cpp plain">);</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Prepare the sockaddr_in structure</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">server.sin_family = AF_INET;</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">server.sin_addr.s_addr = INADDR_ANY;</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">server.sin_port = htons( 8888 );</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Bind</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">( bind(socket_desc,(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">sockaddr *)&amp;server , </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(server)) &lt; 0)</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//print the error message</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"bind failed. Error"</code><code class="cpp plain">);</code></div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"bind done"</code><code class="cpp plain">);</code></div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Listen</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">listen(socket_desc , 3);</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Accept and incoming connection</code></div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Waiting for incoming connections..."</code><code class="cpp plain">);</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">c = </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">sockaddr_in);</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number50 index49 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Accept and incoming connection</code></div><div class="line number52 index51 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Waiting for incoming connections..."</code><code class="cpp plain">);</code></div><div class="line number53 index52 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">c = </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">sockaddr_in);</code></div><div class="line number54 index53 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code><code class="cpp plain">( (client_sock = accept(socket_desc, (</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">sockaddr *)&amp;client, (socklen_t*)&amp;c)) )</code></div><div class="line number55 index54 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number56 index55 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Connection accepted"</code><code class="cpp plain">);</code></div><div class="line number57 index56 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number58 index57 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">pthread_t sniffer_thread;</code></div><div class="line number59 index58 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">new_sock = </code><code class="cpp functions bold">malloc</code><code class="cpp plain">(1);</code></div><div class="line number60 index59 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*new_sock = client_sock;</code></div><div class="line number61 index60 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number62 index61 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">( pthread_create( &amp;sniffer_thread , NULL ,&nbsp; connection_handler , (</code><code class="cpp keyword bold">void</code><code class="cpp plain">*) new_sock) &lt; 0)</code></div><div class="line number63 index62 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number64 index63 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"could not create thread"</code><code class="cpp plain">);</code></div><div class="line number65 index64 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div><div class="line number66 index65 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number67 index66 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number68 index67 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Now join the thread , so that we dont terminate before the thread</code></div><div class="line number69 index68 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//pthread_join( sniffer_thread , NULL);</code></div><div class="line number70 index69 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Handler assigned"</code><code class="cpp plain">);</code></div><div class="line number71 index70 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number72 index71 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number73 index72 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(client_sock &lt; 0)</code></div><div class="line number74 index73 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number75 index74 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"accept failed"</code><code class="cpp plain">);</code></div><div class="line number76 index75 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div><div class="line number77 index76 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number78 index77 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number79 index78 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number80 index79 alt1"><code class="cpp plain">}</code></div><div class="line number81 index80 alt2">&nbsp;</div><div class="line number82 index81 alt1"><code class="cpp comments">/*</code></div><div class="line number83 index82 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* This will handle connection for each client</code></div><div class="line number84 index83 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* */</code></div><div class="line number85 index84 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">*connection_handler(</code><code class="cpp keyword bold">void</code> <code class="cpp plain">*socket_desc)</code></div><div class="line number86 index85 alt1"><code class="cpp plain">{</code></div><div class="line number87 index86 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Get the socket descriptor</code></div><div class="line number88 index87 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">sock = *(</code><code class="cpp color1 bold">int</code><code class="cpp plain">*)socket_desc;</code></div><div class="line number89 index88 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">read_size;</code></div><div class="line number90 index89 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*message , client_message[2000];</code></div><div class="line number91 index90 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number92 index91 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Send some messages to the client</code></div><div class="line number93 index92 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">message = </code><code class="cpp string">"Greetings! I am your connection handler\n"</code><code class="cpp plain">;</code></div><div class="line number94 index93 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">write(sock , message , </code><code class="cpp functions bold">strlen</code><code class="cpp plain">(message));</code></div><div class="line number95 index94 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number96 index95 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">message = </code><code class="cpp string">"Now type something and i shall repeat what you type \n"</code><code class="cpp plain">;</code></div><div class="line number97 index96 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">write(sock , message , </code><code class="cpp functions bold">strlen</code><code class="cpp plain">(message));</code></div><div class="line number98 index97 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number99 index98 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Receive a message from client</code></div><div class="line number100 index99 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code><code class="cpp plain">( (read_size = recv(sock , client_message , 2000 , 0)) &gt; 0 )</code></div><div class="line number101 index100 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number102 index101 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Send the message back to client</code></div><div class="line number103 index102 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">write(sock , client_message , </code><code class="cpp functions bold">strlen</code><code class="cpp plain">(client_message));</code></div><div class="line number104 index103 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number105 index104 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number106 index105 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(read_size == 0)</code></div><div class="line number107 index106 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number108 index107 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(</code><code class="cpp string">"Client disconnected"</code><code class="cpp plain">);</code></div><div class="line number109 index108 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">fflush</code><code class="cpp plain">(stdout);</code></div><div class="line number110 index109 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number111 index110 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp keyword bold">if</code><code class="cpp plain">(read_size == -1)</code></div><div class="line number112 index111 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number113 index112 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"recv failed"</code><code class="cpp plain">);</code></div><div class="line number114 index113 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number115 index114 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number116 index115 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//Free the socket pointer</code></div><div class="line number117 index116 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">free</code><code class="cpp plain">(socket_desc);</code></div><div class="line number118 index117 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number119 index118 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number120 index119 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Run the above server and connect from multiple clients and it will handle all of them. There are other ways to handle multiple clients, like select, poll etc. We shall talk about them in some other article. Till then practise the above code examples and enjoy.</p>
<div class="updated_on">Last Updated On : 27th November 2012</div>
<script type="text/javascript">var dd_offset_from_content = 40;var dd_top_offset_from_content = 0;var dd_override_start_anchor_id = "";var dd_override_top_offset = "";</script><script type="text/javascript" src="./01_files/diggdigg-floating-bar.js"></script>





                    <div class="postTags">
<a href="http://www.binarytides.com/tag/socket-programming/"><b>socket programming</b></a></div>





				</div>
	

<input type="hidden" name="IL_IN_TAG" value="2">
				

<div id="subscribe_feedburner"> 

<form style="text-align:center;" action="http://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(&#39;http://feedburner.google.com/fb/a/mailverify?uri=binarytides&#39;, &#39;popupwindow&#39;, &#39;scrollbars=yes,width=550,height=520&#39;);return true">


<p style="margin:0; font-weight:bold;">
Subscribe to get updates delivered to your inbox 

<input type="text" name="email" placeholder="Enter email to subscribe" style="width: 200px;
border:none;
padding: 5px;
line-height: 20px;
outline: none;
margin-left: 10px;">

<input type="submit" value="Subscribe" style="background: #07c;
color: #fff;
border:none;
margin:0 0 0 10px;
outline: none;
font-weight:bold;
line-height: 20px;
background:#E26A1A;
padding: 5px 10px;">
</p>

<input type="hidden" value="binarytides" name="uri"><input type="hidden" name="loc" value="en_US">


</form>
</div>




<div class="postCredentials">
				

		
							
							<!-- Related Posts-->

<div class="yarpp-related">
<div class="relatedPosts"><span class="title">Related Posts</span><ul>
<li><a href="http://www.binarytides.com/programming-udp-sockets-c-linux/" rel="bookmark" title="Programming udp sockets in C on Linux">Programming udp sockets in C on Linux </a></li>
<li><a href="http://www.binarytides.com/socket-programming-c-linux-tutorial/" rel="bookmark" title="Socket programming in C on Linux â tutorial">Socket programming in C on Linux â tutorial </a></li>
<li><a href="http://www.binarytides.com/whois-client-code-in-c-with-linux-sockets/" rel="bookmark" title="C program to get a domainâs whois information using sockets on Linux">C program to get a domainâs whois information using sockets on Linux </a></li>
<li><a href="http://www.binarytides.com/programming-udp-sockets-in-python/" rel="bookmark" title="Programming udp sockets in python">Programming udp sockets in python </a></li>
<li><a href="http://www.binarytides.com/python-socket-server-code-example/" rel="bookmark" title="Code a simple socket server in Python">Code a simple socket server in Python </a></li>
</ul></div>
</div>



														<!-- end Related Posts-->
							


<div id="authorDetails">
								<img alt="" src="./01_files/e23f2767e6907e798da5b28694a2bf28" srcset="http://2.gravatar.com/avatar/e23f2767e6907e798da5b28694a2bf28?s=128&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64">				About <b>Silver Moon</b>
						<p>
Php developer, blogger and Linux enthusiast. 
He can be reached at <a href="mailto:admin@binarytides.com">admin@binarytides.com</a>.
Or find him on <a href="https://plus.google.com/117145272367995638274/posts" rel="author">Google+</a>

</p>
						</div>
					
		</div>
		<!-- postboxcredentials -->
	



<div class="ad728x90 adwrap" style="margin:20px 0;">

<iframe src="javascript:(function () { var goTo = 'http://ib.msaex.com/?id=JzA4JTs&size=728x90&page_url='+encodeURIComponent(parent.window.document.location)+'&r='+encodeURIComponent(parent.window.document.referrer)+'&l='+encodeURIComponent(parent.window.document.location); this.location=goTo; })()" width="728" height="90" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" allowtransparency="true"></iframe>

</div>

<div class="postBoxMidInner" id="comments">
		
		
		
        
<div id="disqus_thread"><iframe id="dsq-2" data-disqus-uid="2" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%" src="./01_files/saved_resource.html" style="width: 100% !important; border: none !important; overflow: hidden !important; height: 6976px !important;" horizontalscrolling="no" verticalscrolling="no"></iframe></div>

<script type="text/javascript">
var disqus_url = 'http://www.binarytides.com/server-client-example-c-sockets-linux/';
var disqus_identifier = '2306 http://www.binarytides.com/blog/?p=2306';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'binarytides';
var disqus_title = "Server and client example with C sockets on Linux";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
        this.callbacks.onReady.push(function () {

        // sync comments in the background so we don't block the page
        var script = document.createElement('script');
        script.async = true;
        script.src = '?cf_action=sync_comments&post_id=2306';

        var firstScript = document.getElementsByTagName('script')[0];
        firstScript.parentNode.insertBefore(script, firstScript);
    });
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>

			</div>
			</div>

		</div>
				
		</div>
		<!-- End #colLeftInner -->
		</div>
		<!-- End #colLeft -->

<!-- Begin #colRight -->
<div id="colRight">
	
	<div id="adsense_search" class="rightBox">
<div class="widget_content">
<form action="http://www.binarytides.com/search" id="cse-search-box">
  <div>
    <input type="hidden" name="cx" value="partner-pub-5814774904969415:4586881861">
    <input type="hidden" name="cof" value="FORID:10">
    <input type="hidden" name="ie" value="UTF-8">
<table><tbody><tr><td>
    <input type="text" name="q" size="55" style="border: 1px solid rgb(126, 157, 185); padding: 2px; background: url(http://cse.google.com/cse/intl/en/images/google_custom_search_watermark.gif) 0% 50% no-repeat rgb(255, 255, 255);"></td><td>
    <input type="submit" name="sa" value="Search"></td></tr></tbody></table>
  </div>
<input name="siteurl" type="hidden" value="www.binarytides.com/server-client-example-c-sockets-linux/"><input name="ref" type="hidden" value="www.google.com.tw/"><input name="ss" type="hidden" value=""></form>
<script type="text/javascript" src="./01_files/brand"></script>

</div></div>
<!-- search box ends here -->
<center>
<script async="" src="./01_files/adsbygoogle.js"></script>
<!-- binarytides 300x250 sidebar -->
<ins class="adsbygoogle" style="display: inline-block; width: 300px; height: 250px;" data-ad-client="ca-pub-5814774904969415" data-ad-slot="7101063767" data-adsbygoogle-status="done"><ins id="aswift_2_expand" style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><ins id="aswift_2_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><iframe width="300" height="250" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</center>
<br><center>
<a target="_blank" href="http://feedburner.google.com/fb/a/mailverify?uri=binarytides&loc=en_US" style="display:block;"><img src="./01_files/free-linux-ebooks.jpg"></a>
</center>
<br><div class="rightBox"><span class="title">Connect with us</span><div class="widget_content"><ul class="lsi-social-icons icon-set-lsi_widget-2"><li class="lsi-social-facebook"><a class="tooltip tooltipstered" rel="nofollow" href="https://www.facebook.com/binarytides" target="_blank"><i class="lsicon lsicon-facebook"></i></a></li><li class="lsi-social-twitter"><a class="tooltip tooltipstered" rel="nofollow" href="https://twitter.com/binarytides" target="_blank"><i class="lsicon lsicon-twitter"></i></a></li><li class="lsi-social-gplus"><a class="tooltip tooltipstered" rel="nofollow" href="https://plus.google.com/+binarytides" target="_blank"><i class="lsicon lsicon-gplus"></i></a></li><li class="lsi-social-rss"><a class="tooltip tooltipstered" rel="nofollow" href="https://feedburner.google.com/fb/a/mailverify?uri=binarytides" target="_blank"><i class="lsicon lsicon-rss"></i></a></li></ul></div></div><div class="rightBox">
<div class="wp_rp_wrap  wp_rp_modern" id="wp_rp_first"><div class="wp_rp_content"><span class="title">Other interesting stuff</span><div class="widget_content"><ul class="related_post wp_rp"><li data-position="0" data-poid="in-2736" data-post-type="none"><a href="http://www.binarytides.com/programming-udp-sockets-c-linux/" class="wp_rp_thumbnail"><img src="./01_files/0.jpg" alt="Programming udp sockets in C on Linux" width="150" height="150"></a><a href="http://www.binarytides.com/programming-udp-sockets-c-linux/" class="wp_rp_title">Programming udp sockets in C on Linux</a></li><li data-position="1" data-poid="in-51" data-post-type="none"><a href="http://www.binarytides.com/tcp-connect-port-scanner-c-code-linux-sockets/" class="wp_rp_thumbnail"><img src="./01_files/23.jpg" alt="Code a port scanner in C | linux" width="150" height="150"></a><a href="http://www.binarytides.com/tcp-connect-port-scanner-c-code-linux-sockets/" class="wp_rp_title">Code a port scanner in C | linux</a></li><li data-position="2" data-poid="in-1045" data-post-type="none"><a href="http://www.binarytides.com/packet-sniffer-code-in-c-using-linux-sockets-bsd-part-2/" class="wp_rp_thumbnail"><img src="./01_files/15.jpg" alt="Packet Sniffer Code in C using Linux Sockets (BSD) â Part 2" width="150" height="150"></a><a href="http://www.binarytides.com/packet-sniffer-code-in-c-using-linux-sockets-bsd-part-2/" class="wp_rp_title">Packet Sniffer Code in C using Linux Sockets (BSD) â Part 2</a></li><li data-position="3" data-poid="in-3156" data-post-type="none"><a href="http://www.binarytides.com/programming-udp-sockets-in-python/" class="wp_rp_thumbnail"><img src="./01_files/16.jpg" alt="Programming udp sockets in python" width="150" height="150"></a><a href="http://www.binarytides.com/programming-udp-sockets-in-python/" class="wp_rp_title">Programming udp sockets in python</a></li><li data-position="4" data-poid="in-1271" data-post-type="none"><a href="http://www.binarytides.com/socket-programming-c-linux-tutorial/" class="wp_rp_thumbnail"><img src="./01_files/14.jpg" alt="Socket programming in C on Linux â tutorial" width="150" height="150"></a><a href="http://www.binarytides.com/socket-programming-c-linux-tutorial/" class="wp_rp_title">Socket programming in C on Linux â tutorial</a></li><li data-position="5" data-poid="in-1266" data-post-type="none"><a href="http://www.binarytides.com/whois-client-code-in-c-with-linux-sockets/" class="wp_rp_thumbnail"><img src="./01_files/5.jpg" alt="C program to get a domainâs whois information using sockets on Linux" width="150" height="150"></a><a href="http://www.binarytides.com/whois-client-code-in-c-with-linux-sockets/" class="wp_rp_title">C program to get a domainâs whois information using sockets on Linux</a></li></ul></div></div>
</div></div><center>
<iframe src="./01_files/likebox.html" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:300px; height:214px;" allowtransparency="true"></iframe>
</center>
<br><center>
<!-- BEGIN IFRAME TAG - binarytides.com RON Global Display Rev Share < - DO NOT MODIFY -->
<iframe src="./01_files/tt.html" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" allowtransparency="true" width="300" height="250"></iframe>
<!-- END TAG -->
</center>
</div>
<!-- End #colRight -->	

</div>
<!-- end of colwrap -->

</div>
		<!-- end content -->
	
	</div><div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="fb_xdm_frame_http" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" id="fb_xdm_frame_http" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" src="./01_files/1ldYU13brY_.html" style="border: none;"></iframe><iframe name="fb_xdm_frame_https" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" src="./01_files/1ldYU13brY_(1).html" style="border: none;"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div></div></div></div><iframe name="oauth2relay1201043533" id="oauth2relay1201043533" src="./01_files/postmessageRelay.html" tabindex="-1" style="width: 1px; height: 1px; position: absolute; top: -100px;"></iframe>
	<!-- end wrapper -->
	<!-- begin footer -->
	
	<div id="footer">
		<div id="copyrightInner">

<div style="line-height:32px;">			

<div id="footer_links">
	<a href="http://www.binarytides.com/about">About us</a>
	<a href="http://www.binarytides.com/contact">Contact us</a>
	<a href="http://www.binarytides.com/faq">Faq</a>
	<a href="http://www.binarytides.com/advertise">Advertise</a>
	<a href="http://www.binarytides.com/privacy">Privacy Policy</a>
<!--	<a href="/terms">Terms of Service</a>-->
</div>

Copyright Â© 2015 BinaryTides

</div>
		

		</div>



	</div>
	<!-- end footer -->

	

        <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'binarytides';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('data-dsqidentifier'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script>
        <script type="text/javascript">
 
$(function () 
{
  var msie6 = $.browser == 'msie' && $.browser.version < 7;
 /*
  if (!msie6) 
{
var elem = $('#right_gad').closest('.rightBox');
    var top = elem.offset().top - parseFloat(elem.css('margin-top').replace(/auto/, 0));
 
	$(window).scroll(function (event) 
{

// what the y position of the scroll is
      var y = $(this).scrollTop();
 
      if (y >= top) {
        // if so, ad the fixed class
        elem.addClass('fixed');
      } else {
        // otherwise remove it
        elem.removeClass('fixed');
      }
    });
  }  */
});
 
</script>





<!-- google analytics event tracking -->
<script type="text/javascript">
$(function() 
{ 

$('li.SPOSTARBUST-Related-Post a').click(function() 
{ 
	ga('send', 'event', 'clicks', 'related_posts_right', $(this).html(), {'nonInteraction': 1});
});
	
//For adverts and offers, save the href/link
$('a.offer').click(function() 
{ 
//	_gaq.push(['_trackEvent', 'clicks', 'offer', $(this).attr('href') , 5, true]);
});

$('.postBoxMidInner p img').closest('p').css('clear','both');
	

// detect ad blocking
	
if( $('.adcontent').height() == 0 )
{
	// console.log('Sad. You have ad blocker enabled');
	ga('send', 'event', 'adblocks', 'adblocks', 'adblocks', {'nonInteraction': 1});

	// add some content to the empty ad area
}

});	
</script>





<!-- facebook retargetting code -->
<script>(function() {
  var _fbq = window._fbq || (window._fbq = []);
  if (!_fbq.loaded) {
    var fbds = document.createElement('script');
    fbds.async = true;
    fbds.src = '//connect.facebook.net/en_US/fbds.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(fbds, s);
    _fbq.loaded = true;
  }
  _fbq.push(['addPixelId', '549413535176484']);
})();
window._fbq = window._fbq || [];
window._fbq.push(["track", "PixelInitialized", {}]);
</script>
<noscript>&lt;img height="1" width="1" border="0" alt="" style="display:none" src="https://www.facebook.com/tr?id=549413535176484&amp;ev=NoScript" /&gt;</noscript>




<!-- Quantcast Tag -->
<script type="text/javascript">
var _qevents = _qevents || [];

(function() {
var elem = document.createElement('script');
elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
elem.async = true;
elem.type = "text/javascript";
var scpt = document.getElementsByTagName('script')[0];
scpt.parentNode.insertBefore(elem, scpt);
})();

_qevents.push({
qacct:"p-PydpEyknvJJzJ"
});
</script>

<noscript>
&lt;div style="display:none;"&gt;
&lt;img src="//pixel.quantserve.com/pixel/p-PydpEyknvJJzJ.gif" border="0" height="1" width="1" alt="Quantcast"/&gt;
&lt;/div&gt;
</noscript>
<!-- End Quantcast tag --><script type="text/javascript" src="./01_files/shCore.js"></script>
<script type="text/javascript" src="./01_files/shBrushCpp.js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.binarytides.com/blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.binarytides.com/blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<link rel="stylesheet" id="yarppRelatedCss-css" href="./01_files/related.css" type="text/css" media="all">
<link rel="stylesheet" id="lsi-style-css" href="./01_files/style(1).css" type="text/css" media="all">
<style id="lsi-style-inline-css" type="text/css">

			.icon-set-lsi_widget-2 {
				text-align:left !important;
			}
			.icon-set-lsi_widget-2 a, 
			.icon-set-lsi_widget-2 a:visited, 
			.icon-set-lsi_widget-2 a:focus {
				border-radius: 2px;
				background: #1E72BD !important;
				color: #FFFFFF !important;
				font-size: 20px !important;
			}
			.icon-set-lsi_widget-2 a:hover {
				background: #dd3333 !important;
				color: #FFFFFF !important;
			}
</style>
<script type="text/javascript" src="./01_files/jquery.form.min.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var _wpcf7 = {"loaderUrl":"http:\/\/www.binarytides.com\/blog\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ...","cached":"1"};
/* ]]> */
</script>
<script type="text/javascript" src="./01_files/scripts.js"></script>
<script type="text/javascript" src="./01_files/jquery.tooltipster.min.js"></script>


<!-- ZenCache file path: /cache/zencache/cache/http/www-binarytides-com/server-client-example-c-sockets-linux.html -->
<!-- ZenCache file built for (http://www.binarytides.com/server-client-example-c-sockets-linux/) in 0.16349 seconds, on: Jun 18th, 2015 @ 10:50 am UTC. -->
<!-- This ZenCache file will auto-expire (and be rebuilt) on: Jun 25th, 2015 @ 10:50 am UTC (based on your configured expiration time). -->
<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- ZenCache fully functional :-) Cache file served for (http://www.binarytides.com/server-client-example-c-sockets-linux/) in 0.00064 seconds, on: Jun 21st, 2015 @ 6:54 am UTC. --><div class="dd_outer" style="position: absolute;"><div class="dd_inner" style="width: 967px;"><div id="dd_ajax_float" style="position: absolute; top: 286px; left: -95px; display: none;"><div class="dd_button_v"><iframe id="twitter-widget-1" scrolling="no" frameborder="0" allowtransparency="true" src="./01_files/tweet_button.c197f64a14a7434e6e58ca9722b54406.en(1).html" class="twitter-share-button twitter-tweet-button twitter-share-button twitter-count-vertical" title="Twitter Tweet Button" data-twttr-rendered="true" style="position: static; visibility: visible; width: 59px; height: 61px;"></iframe><script type="text/javascript" src="./01_files/widgets.js"></script></div><div style="clear:left"></div><div class="dd_button_v"><script src="./01_files/all.js"></script><fb:like href="http://www.binarytides.com/server-client-example-c-sockets-linux/" send="false" show_faces="false" layout="box_count" width="50" class=" fb_iframe_widget" fb-xfbml-state="rendered" fb-iframe-plugin-query="app_id=&amp;container_width=0&amp;href=http%3A%2F%2Fwww.binarytides.com%2Fserver-client-example-c-sockets-linux%2F&amp;layout=box_count&amp;locale=en_US&amp;sdk=joey&amp;send=false&amp;show_faces=false&amp;width=50"><span style="vertical-align: bottom; width: 49px; height: 61px;"><iframe name="f845065d4" width="50px" height="1000px" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" title="fb:like Facebook Social Plugin" src="./01_files/like.html" style="border: none; visibility: visible; width: 49px; height: 61px;" class=""></iframe></span></fb:like></div><div style="clear:left"></div><div class="dd_button_v"><script type="text/javascript" src="./01_files/plusone.js" gapi_processed="true"></script><div id="___plusone_1" style="text-indent: 0px; margin: 0px; padding: 0px; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 50px; height: 60px; background: transparent;"><iframe frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 50px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 60px;" tabindex="0" vspace="0" width="100%" id="I1_1434869699664" name="I1_1434869699664" src="./01_files/fastbutton(1).html" data-gapiattached="true" title="+1"></iframe></div></div><div style="clear:left"></div><div class="dd_button_v"><script src="./01_files/in.js" type="text/javascript"></script><span class="IN-widget" style="line-height: 1; vertical-align: baseline; display: inline-block; text-align: center;"><span style="padding: 0px !important; margin: 0px !important; text-indent: 0px !important; display: inline-block !important; vertical-align: baseline !important; font-size: 1px !important;"><span id="li_ui_li_gen_1434869698029_1-container" class="IN-top IN-empty"><span id="li_ui_li_gen_1434869698029_1" class="IN-top"><span id="li_ui_li_gen_1434869698029_1-inner" class="IN-top"><span id="li_ui_li_gen_1434869698029_1-content" class="IN-top">0</span></span></span></span></span><br><span style="padding: 0px !important; margin: 0px !important; text-indent: 0px !important; display: inline-block !important; vertical-align: baseline !important; font-size: 1px !important;"><span id="li_ui_li_gen_1434869697976_0"><a id="li_ui_li_gen_1434869697976_0-link" href="javascript:void(0);"><span id="li_ui_li_gen_1434869697976_0-logo">in</span><span id="li_ui_li_gen_1434869697976_0-title"><span id="li_ui_li_gen_1434869697976_0-mark"></span><span id="li_ui_li_gen_1434869697976_0-title-text">Share</span></span></a></span></span></span><script type="IN/Share+init" data-url="http://www.binarytides.com/server-client-example-c-sockets-linux/" data-counter="top"></script></div><div style="clear:left"></div></div></div></div></body></html>