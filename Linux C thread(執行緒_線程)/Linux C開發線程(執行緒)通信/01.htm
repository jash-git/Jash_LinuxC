<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0053)http://blog.csdn.net/do2jiang/article/details/5527155 -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script charset="utf-8" async="" src="./01_files/log.js"></script><script src="./01_files/get_uid.json"></script>
<title>Linux下多线程(pthread)编程实例 - 游手好弦 信步涂鸦 - 博客频道 - CSDN.NET</title>

<meta name="description" content="Linux系统下的多线程遵循POSIX线程接口，称为 pthread。编写Linux下的多线程程序，需要使用头文件pthread.h，连接时需要使用库libpthread.a。顺便说一下，Linux 下pthread的实现是通过系统调用clone（）来实现的。clone（）是 Linux所特有的系统调用，它的使用方式类似fork，关于clone（）的详细情况，有兴趣的读者可以去查看有关文档说明。下">
<script type="text/javascript" async="" src="./01_files/ga.js"></script><script src="./01_files/jquery.js" type="text/javascript"></script>
<script type="text/javascript" src="./01_files/ad.js"></script>
<link rel="Stylesheet" type="text/css" href="./01_files/style.css">
<link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://blog.csdn.net/do2jiang/rss/list">
<link rel="shortcut icon" href="http://blog.csdn.net/favicon.ico">
<link type="text/css" rel="stylesheet" href="./01_files/default.css">
<link type="text/css" rel="stylesheet" href="./01_files/style(1).css"></head>
<body>
<script src="./01_files/pub_topnav_2011.js" type="text/javascript"></script><link rel="stylesheet" type="text/css" href="./01_files/navtop_2012.css">
<div class="nav_top_2011">
<p><span style="color:red;">您还未登录！</span>|<a href="https://passport.csdn.net/account/login" target="_top">登录</a>|<a href="https://passport.csdn.net/account/register" target="_top">注册</a>|<a href="https://passport.csdn.net/help/faq" target="_blank">帮助</a></p><ul>
<li><a href="http://www.csdn.net/" target="_blank" style="color: red;">首页</a></li>
<li><a href="http://news.csdn.net/" target="_blank">业界</a></li>
<li><a href="http://mobile.csdn.net/" target="_blank">移动</a></li>
<li><a href="http://cloud.csdn.net/" target="_blank">云计算</a></li>
<li><a href="http://sd.csdn.net/" target="_blank">研发</a></li>
<li><a href="http://bbs.csdn.net/" target="_blank">论坛</a></li>
<li><a href="http://blog.csdn.net/" target="_blank">博客</a></li>
<li><a href="http://download.csdn.net/" target="_blank">下载</a></li>
<li class="more"><h2 id="topnav_btnmore" onclick="showNavMore(this)"><a href="javascript:void(0);">更多</a></h2>
<div id="topnav_hidlist">
<iframe name="nav_frm" src="about:blank" width="92" height="178" scrolling="no" frameborder="no"></iframe>
</div>
</li>
</ul>
</div>


<div id="container">
<div id="header">
    <div class="header">
        <div id="blog_title">
            <h1><a href="http://blog.csdn.net/do2jiang">游手好弦 信步涂鸦</a></h1>
            <h2>山高月小，水落石出</h2>
            <div class="clear"></div>
        </div>
        <div class="clear"></div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg"></div>
    <div class="navigator">
        <ul>
            <li id="btnContents"><a href="http://blog.csdn.net/do2jiang?viewmode=contents"><span><img src="./01_files/ico_list.gif">目录视图</span></a></li>
            <li id="btnView"><a href="http://blog.csdn.net/do2jiang?viewmode=list"><span><img src="./01_files/ico_summary.gif">摘要视图</span></a></li>
            <li id="btnRss"><a href="http://blog.csdn.net/do2jiang/rss/list"><span><img src="./01_files/ico_rss.gif">订阅</span></a></li>
</ul>
    </div>
</div>
<script type="text/javascript">
    var username = "do2jiang";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/do2jiang";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";
</script>

<div id="body">
<div id="main">
<div class="main">
<div class="notice"> 

<a href="http://read.csdn.net/" target="_blank">
<font color="red">CSDN个性阅读，订阅你想看的博客文章</font></a>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://www.csdn.net/article/2013-08-06/2816471" target="_blank"><font color="blue">专访李铁军：从医生到金山首席安全专家的转变 
</font></a>

&nbsp;&nbsp;&nbsp;&nbsp;



<a href="http://blog.csdn.net/adali/article/details/9813651" target="_blank">
<font color="blue">独一无二的职位：开源社区经理 
 </font></a>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/blogdevteam/article/details/10389969" target="_blank"><font color="blue">CSDN博客第三期云计算最佳博主评选</font></a>



</div>
<div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Repost"></span>
    <h3>
        <span class="link_title"><a href="./01_files/01.htm">
        Linux下多线程(pthread)编程实例
        </a></span>
    </h3>
</div>

        
    <div class="article_manage">
        <span class="link_categories">
        分类：
            <a href="http://blog.csdn.net/do2jiang/article/category/533379">L.Linux 开发</a> 
            <a href="http://blog.csdn.net/do2jiang/article/category/533386">O.嵌入式系统开发</a> 
        </span>
    <span class="link_postdate">2010-04-25 18:07</span>
    <span class="link_view" title="阅读次数">6890人阅读</span>
    <span class="link_comments" title="评论次数"><a href="http://blog.csdn.net/do2jiang/article/details/5527155#comments">评论</a>(1)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:collectArticle(&#39;Linux下多线程(pthread)编程实例&#39;,&#39;5527155&#39;);return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="http://blog.csdn.net/do2jiang/article/details/5527155#report" onclick="javascript:report(5527155,2);return false;" title="举报">举报</a></span>
    
</div>
<div class="tag2box"><a href="http://blog.csdn.net/tag/details.html?tag=linux" target="_blank">linux</a><a href="http://blog.csdn.net/tag/details.html?tag=%e5%a4%9a%e7%ba%bf%e7%a8%8b" target="_blank">多线程</a><a href="http://blog.csdn.net/tag/details.html?tag=thread" target="_blank">thread</a><a href="http://blog.csdn.net/tag/details.html?tag=null" target="_blank">null</a><a href="http://blog.csdn.net/tag/details.html?tag=%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84" target="_blank">数据结构</a><a href="http://blog.csdn.net/tag/details.html?tag=struct" target="_blank">struct</a></div>


    
<div id="article_content" class="article_content">
<p>Linux系统下的多线程遵循POSIX线程接口，称为 pthread。编写Linux下的多线程程序，需要使用头文件pthread.h，连接时需要使用库libpthread.a。顺便说一下，Linux 下pthread的实现是通过系统调用clone（）来实现的。clone（）是 Linux所特有的系统调用，它的使用方式类似fork，关于clone（）的详细情况，有兴趣的读者可以去查看有关文档说明。下面我们展示一个最简单的多线程程序 pthread_create.c。</p>
<p><br>一个重要的线程创建函数原型：<br>#include &lt;pthread.h&gt;<br>int pthread_create(pthread_t *restrict tidp,const pthread_attr_t *restrict attr, void *(*start_rtn)(void),void *restrict arg);</p>
<p>&nbsp;&nbsp;&nbsp; 返回值：若是成功建立线程返回0,否则返回错误的编号<br>&nbsp;&nbsp;&nbsp; 形式参数：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pthread_t *restrict tidp 要创建的线程的线程id指针<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const pthread_attr_t *restrict attr 创建线程时的线程属性<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void* (start_rtn)(void) 返回值是void类型的指针函数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void *restrict arg&nbsp;&nbsp; start_rtn的行参<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>例程1：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; 功能：创建一个简单的线程<br>&nbsp;&nbsp;&nbsp; 程序名称：pthread_create.c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 　　<br>/********************************************************************************************<br>**&nbsp;&nbsp;&nbsp; Name:pthread_create.c<br>**&nbsp;&nbsp;&nbsp; Used to study the multithread programming in Linux OS<br>**&nbsp;&nbsp;&nbsp; Author:zeickey<br>**&nbsp;&nbsp;&nbsp; Date:2006/9/16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>**&nbsp;&nbsp;&nbsp; Copyright (c) 2006,All Rights Reserved!<br>*********************************************************************************************/</p>
<p>#include &lt;stdio.h&gt;<br>#include &lt;pthread.h&gt;</p>
<p>void *myThread1(void)<br>{<br>&nbsp;&nbsp;&nbsp; int i;<br>&nbsp;&nbsp;&nbsp; for (i=0; i&lt;100; i++)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("This is the 1st pthread,created by zieckey./n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sleep(1);//Let this thread to sleep 1 second,and then continue to run<br>&nbsp;&nbsp;&nbsp; }<br>}</p>
<p>void *myThread2(void)<br>{<br>&nbsp;&nbsp;&nbsp; int i;<br>&nbsp;&nbsp;&nbsp; for (i=0; i&lt;100; i++)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("This is the 2st pthread,created by zieckey./n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sleep(1);<br>&nbsp;&nbsp;&nbsp; }<br>}</p>
<p>int main()<br>{<br>&nbsp;&nbsp;&nbsp; int i=0, ret=0;<br>&nbsp;&nbsp;&nbsp; pthread_t id1,id2;<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; ret = pthread_create(&amp;id2, NULL, (void*)myThread1, NULL);<br>&nbsp;&nbsp;&nbsp; if (ret)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("Create pthread error!/n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 1;<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; ret = pthread_create(&amp;id2, NULL, (void*)myThread2, NULL);<br>&nbsp;&nbsp;&nbsp; if (ret)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("Create pthread error!/n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 1;<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; pthread_join(id1, NULL);<br>&nbsp;&nbsp;&nbsp; pthread_join(id2, NULL);<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; return 0;<br>}</p>
<p><br>　　我们编译此程序：<br># gcc pthread_create.c -lpthread</p>
<p>因为pthread的库不是linux系统的库，所以在进行编译的时候要加上-lpthread，否则编译不过，会出现下面错误<br>thread_test.c: 在函数 ‘create’ 中：<br>thread_test.c:7: 警告： 在有返回值的函数中，程序流程到达函数尾<br>/tmp/ccOBJmuD.o: In function `main':thread_test.c:(.text+0x4f)：对‘pthread_create’未定义的引用<br>collect2: ld 返回 1</p>
<p>　　运行，我们得到如下结果：<br># ./a.out<br>This is the 1st pthread,created by zieckey.<br>This is the 2st pthread,created by zieckey.<br>This is the 1st pthread,created by zieckey.<br>This is the 2st pthread,created by zieckey.<br>This is the 2st pthread,created by zieckey.<br>This is the 1st pthread,created by zieckey.<br>....</p>
<p>两个线程交替执行。<br>此例子介绍了创建线程的方法。<br>下面例子介绍向线程传递参数。</p>
<p><br>例程2：<br>&nbsp;&nbsp;&nbsp; 功能：向新的线程传递整形值<br>&nbsp;&nbsp;&nbsp; 程序名称：pthread_int.c<br>/********************************************************************************************<br>**&nbsp;&nbsp;&nbsp; Name:pthread_int.c<br>**&nbsp;&nbsp;&nbsp; Used to study the multithread programming in Linux OS<br>**&nbsp;&nbsp;&nbsp; Pass a parameter to the thread.<br>**&nbsp;&nbsp;&nbsp; Author:zeickey<br>**&nbsp;&nbsp;&nbsp; Date:2006/9/16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>**&nbsp;&nbsp;&nbsp; Copyright (c) 2006,All Rights Reserved!<br>*********************************************************************************************/</p>
<p>#include &lt;stdio.h&gt;<br>#include &lt;pthread.h&gt;<br>#include &lt;unistd.h&gt;</p>
<p>void *create(void *arg)<br>{<br>&nbsp;&nbsp;&nbsp; int *num;<br>&nbsp;&nbsp;&nbsp; num=(int *)arg;<br>&nbsp;&nbsp;&nbsp; printf("create parameter is %d /n",*num);<br>&nbsp;&nbsp;&nbsp; return (void *)0;<br>}<br>int main(int argc ,char *argv[])<br>{<br>&nbsp;&nbsp;&nbsp; pthread_t tidp;<br>&nbsp;&nbsp;&nbsp; int error;<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; int test=4;<br>&nbsp;&nbsp;&nbsp; int *attr=&amp;test;<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; error=pthread_create(&amp;tidp,NULL,create,(void *)attr);</p>
<p>&nbsp;&nbsp;&nbsp; if(error)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("pthread_create is created is not created ... /n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; sleep(1);<br>&nbsp;&nbsp;&nbsp; printf("pthread_create is created .../n");<br>&nbsp;&nbsp;&nbsp; return 0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>}</p>
<p><br>&nbsp;&nbsp;&nbsp; 编译方法：</p>
<p>gcc -lpthread pthread_int.c -Wall</p>
<p><br>&nbsp;&nbsp;&nbsp; 执行结果：</p>
<p>create parameter is 4<br>pthread_create is created is&nbsp; created ...</p>
<p><br>&nbsp;&nbsp;&nbsp; 例程总结：<br>&nbsp;&nbsp;&nbsp; 可以看出来，我们在main函数中传递的整行指针，传递到我们新建的线程函数中。<br>&nbsp;&nbsp;&nbsp; 在上面的例子可以看出来我们向新的线程传入了另一个线程的int数据，线程之间还可以传递字符串或是更复杂的数据结构。</p>
<p>例程3：<br>&nbsp;&nbsp;&nbsp; 程序功能：向新建的线程传递字符串<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 程序名称：pthread_string.c<br>/********************************************************************************************<br>**&nbsp;&nbsp;&nbsp; Name:pthread_string.c<br>**&nbsp;&nbsp;&nbsp; Used to study the multithread programming in Linux OS<br>**&nbsp;&nbsp;&nbsp; Pass a ‘char*‘ parameter to the thread.<br>**&nbsp;&nbsp;&nbsp; Author:zeickey<br>**&nbsp;&nbsp;&nbsp; Date:2006/9/16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>**&nbsp;&nbsp;&nbsp; Copyright (c) 2006,All Rights Reserved!<br>*********************************************************************************************/<br>#include &lt;pthread.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;unistd.h&gt;</p>
<p>void *create(void *arg)<br>{<br>&nbsp;&nbsp;&nbsp; char *name;<br>&nbsp;&nbsp;&nbsp; name=(char *)arg;<br>&nbsp;&nbsp;&nbsp; printf("The parameter passed from main function is %s&nbsp; /n",name);<br>&nbsp;&nbsp;&nbsp; return (void *)0;<br>}</p>
<p>int main(int argc, char *argv[])<br>{<br>&nbsp;&nbsp;&nbsp; char *a="zieckey";<br>&nbsp;&nbsp;&nbsp; int error;<br>&nbsp;&nbsp;&nbsp; pthread_t tidp;</p>
<p>&nbsp;&nbsp;&nbsp; error=pthread_create(&amp;tidp, NULL, create, (void *)a);</p>
<p>&nbsp;&nbsp;&nbsp; if(error!=0)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("pthread is not created./n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -1;<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; sleep(1);<br>&nbsp;&nbsp;&nbsp; printf("pthread is created... /n");<br>&nbsp;&nbsp;&nbsp; return 0;<br>}&nbsp;&nbsp; </p>
<p>&nbsp; 编译方法：</p>
<p>gcc -Wall pthread_string.c -lpthread</p>
<p><br>&nbsp;&nbsp;&nbsp; 执行结果：<br>The parameter passed from main function is zieckey <br>pthread is created...</p>
<p><br>&nbsp;&nbsp;&nbsp; 例程总结：<br>&nbsp;&nbsp;&nbsp; 可以看出来main函数中的字符串传入了新建的线程中。</p>
<p>例程4：<br>&nbsp;&nbsp;&nbsp; 程序功能：向新建的线程传递字符串<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 程序名称：pthread_struct.c<br>/********************************************************************************************<br>**&nbsp;&nbsp;&nbsp; Name:pthread_struct.c<br>**&nbsp;&nbsp;&nbsp; Used to study the multithread programming in Linux OS<br>**&nbsp;&nbsp;&nbsp; Pass a ‘char*‘ parameter to the thread.<br>**&nbsp;&nbsp;&nbsp; Author:zeickey<br>**&nbsp;&nbsp;&nbsp; Date:2006/9/16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>**&nbsp;&nbsp;&nbsp; Copyright (c) 2006,All Rights Reserved!<br>*********************************************************************************************/<br>#include &lt;stdio.h&gt;<br>#include &lt;pthread.h&gt;<br>#include &lt;unistd.h&gt;<br>#include &lt;stdlib.h&gt;</p>
<p>struct menber<br>{<br>&nbsp;&nbsp;&nbsp; int a;<br>&nbsp;&nbsp;&nbsp; char *s;<br>};</p>
<p>void *create(void *arg)<br>{<br>&nbsp;&nbsp;&nbsp; struct menber *temp;<br>&nbsp;&nbsp;&nbsp; temp=(struct menber *)arg;<br>&nbsp;&nbsp;&nbsp; printf("menber-&gt;a = %d&nbsp; /n",temp-&gt;a);<br>&nbsp;&nbsp;&nbsp; printf("menber-&gt;s = %s&nbsp; /n",temp-&gt;s);<br>&nbsp;&nbsp;&nbsp; return (void *)0;<br>}</p>
<p>int main(int argc,char *argv[])<br>{<br>&nbsp;&nbsp;&nbsp; pthread_t tidp;<br>&nbsp;&nbsp;&nbsp; int error;<br>&nbsp;&nbsp;&nbsp; struct menber *b;<br>&nbsp;&nbsp;&nbsp; b=(struct menber *)malloc( sizeof(struct menber) );<br>&nbsp;&nbsp;&nbsp; b-&gt;a = 4;<br>&nbsp;&nbsp;&nbsp; b-&gt;s = "zieckey";</p>
<p>&nbsp;&nbsp;&nbsp; error = pthread_create(&amp;tidp, NULL, create, (void *)b);</p>
<p>&nbsp;&nbsp;&nbsp; if( error )<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("phread is not created.../n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -1;<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; sleep(1);<br>&nbsp;&nbsp;&nbsp; printf("pthread is created.../n");<br>&nbsp;&nbsp;&nbsp; return 0;<br>}</p>
<p>&nbsp; 编译方法：</p>
<p>gcc -Wall pthread_struct.c -lpthread</p>
<p><br>&nbsp;&nbsp;&nbsp; 执行结果：<br>menber-&gt;a = 4 <br>menber-&gt;s = zieckey <br>pthread is created...</p>
<p>&nbsp;&nbsp;&nbsp; 例程总结：<br>&nbsp;&nbsp;&nbsp; 可以看出来main函数中的一个结构体传入了新建的线程中。<br>&nbsp;&nbsp;&nbsp; 线程包含了标识进程内执行环境必须的信息。他集成了进程中的所有信息都是对线程进行共享的，包括文本程序、程序的全局内存和堆内存、栈以及文件描述符。<br>&nbsp;&nbsp; </p>
<p>例程5：<br>&nbsp;&nbsp;&nbsp; 程序目的：验证新建立的线程可以共享进程中的数据<br>&nbsp;&nbsp;&nbsp; 程序名称：pthread_share.c </p>
<p>/********************************************************************************************<br>**&nbsp;&nbsp;&nbsp; Name:pthread_share_data.c<br>**&nbsp;&nbsp;&nbsp; Used to study the multithread programming in Linux OS<br>**&nbsp;&nbsp;&nbsp; Pass a ‘char*‘ parameter to the thread.<br>**&nbsp;&nbsp;&nbsp; Author:zeickey<br>**&nbsp;&nbsp;&nbsp; Date:2006/9/16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>**&nbsp;&nbsp;&nbsp; Copyright (c) 2006,All Rights Reserved!<br>*********************************************************************************************/<br>#include &lt;stdio.h&gt;<br>#include &lt;pthread.h&gt;<br>#include &lt;unistd.h&gt;</p>
<p>static int a=4;<br>void *create(void *arg)<br>{<br>&nbsp;&nbsp;&nbsp; printf("new pthread ... /n");<br>&nbsp;&nbsp;&nbsp; printf("a=%d&nbsp; /n",a);<br>&nbsp;&nbsp;&nbsp; return (void *)0;<br>}</p>
<p>int main(int argc,char *argv[])<br>{<br>&nbsp;&nbsp;&nbsp; pthread_t tidp;<br>&nbsp;&nbsp;&nbsp; int error;<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; a=5;</p>
<p>&nbsp;&nbsp;&nbsp; error=pthread_create(&amp;tidp, NULL, create, NULL);</p>
<p>&nbsp;&nbsp;&nbsp; if(error!=0)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("new thread is not create ... /n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -1;<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; sleep(1);<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; printf("new thread is created ... /n");<br>&nbsp;&nbsp;&nbsp; return 0;<br>}<br>&nbsp;&nbsp; <br>&nbsp; 编译方法：</p>
<p>gcc -Wall pthread_share_data.c -lpthread</p>
<p><br>&nbsp;&nbsp;&nbsp; 执行结果：<br>new pthread ...<br>a=5 <br>new thread is created ...</p>
<p><br>&nbsp;&nbsp;&nbsp; 例程总结：<br>可以看出来，我们在主线程更改了我们的全局变量a的值的时候，我们新建立的线程则打印出来了改变的值，可以看出可以访问线程所在进程中的数据信息。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2、线程的终止</p>
<p>&nbsp;&nbsp;&nbsp; 如果进程中任何一个线程中调用exit，_Exit,或者是_exit，那么整个进程就会终止，<br>&nbsp;&nbsp;&nbsp; 与此类似，如果信号的默认的动作是终止进程，那么，把该信号发送到线程会终止进程。<br>&nbsp;&nbsp;&nbsp; 线程的正常退出的方式：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (1) 线程只是从启动例程中返回，返回值是线程中的退出码<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (2) 线程可以被另一个进程进行终止<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (3) 线程自己调用pthread_exit函数<br>&nbsp;&nbsp;&nbsp; 两个重要的函数原型：</p>
<p>#include &lt;pthread.h&gt;<br>void pthread_exit(void *rval_ptr);<br>/*rval_ptr 线程退出返回的指针*/</p>
<p>int pthread_join(pthread_t thread,void **rval_ptr);<br>&nbsp;&nbsp; /*成功结束进程为0,否则为错误编码*/</p>
<p><br>&nbsp;&nbsp;&nbsp; 例程6<br>&nbsp;&nbsp;&nbsp; 程序目的：线程正常退出，接受线程退出的返回码<br>&nbsp;&nbsp;&nbsp; 程序名称：pthread_exit.c</p>
<p>/********************************************************************************************<br>**&nbsp;&nbsp;&nbsp; Name:pthread_exit.c<br>**&nbsp;&nbsp;&nbsp; Used to study the multithread programming in Linux OS<br>**&nbsp;&nbsp;&nbsp; A example showing a thread to exit and with a return code.<br>**&nbsp;&nbsp;&nbsp; Author:zeickey<br>**&nbsp;&nbsp;&nbsp; Date:2006/9/16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>**&nbsp;&nbsp;&nbsp; Copyright (c) 2006,All Rights Reserved!<br>*********************************************************************************************/</p>
<p>#include &lt;stdio.h&gt;<br>#include &lt;pthread.h&gt;<br>#include &lt;unistd.h&gt;</p>
<p>void *create(void *arg)<br>{<br>&nbsp;&nbsp;&nbsp; printf("new thread is created ... /n");<br>&nbsp;&nbsp;&nbsp; return (void *)8;<br>}</p>
<p>int main(int argc,char *argv[])<br>{<br>&nbsp;&nbsp;&nbsp; pthread_t tid;<br>&nbsp;&nbsp;&nbsp; int error;<br>&nbsp;&nbsp;&nbsp; void *temp;</p>
<p>&nbsp;&nbsp;&nbsp; error = pthread_create(&amp;tid, NULL, create, NULL);</p>
<p>&nbsp;&nbsp;&nbsp; if( error )<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("thread is not created ... /n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -1;<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; error = pthread_join(tid, &amp;temp);</p>
<p>&nbsp;&nbsp;&nbsp; if( error )<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("thread is not exit ... /n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -2;<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; printf("thread is exit code %d /n", (int )temp);<br>&nbsp;&nbsp;&nbsp; return 0;<br>}</p>
<p>&nbsp; 编译方法：</p>
<p>gcc -Wall pthread_exit.c -lpthread</p>
<p><br>&nbsp;&nbsp;&nbsp; 执行结果：<br>new thread is created ...<br>thread is exit code 8</p>
<p>&nbsp;&nbsp;&nbsp; 例程总结：<br>可以看出来，线程退出可以返回线程的int数值。线程退出不仅仅可以返回线程的int数值，还可以返回一个复杂的数据结构。</p>
<p>&nbsp;&nbsp;&nbsp; 例程7<br>&nbsp;&nbsp;&nbsp; 程序目的：线程结束返回一个复杂的数据结构<br>&nbsp;&nbsp;&nbsp; 程序名称：pthread_return_struct.c<br>#include &lt;stdio.h&gt;<br>#include &lt;pthread.h&gt;<br>#include &lt;unistd.h&gt;</p>
<p>struct menber<br>{<br>&nbsp;&nbsp;&nbsp; int a;<br>&nbsp;&nbsp;&nbsp; char *b;<br>}temp={8,"zieckey"};<br>void *create(void *arg)<br>{<br>&nbsp;&nbsp;&nbsp; printf("new thread ... /n");<br>&nbsp;&nbsp;&nbsp; return (void *)&amp;temp;<br>}</p>
<p>int main(int argc,char *argv[])<br>{<br>&nbsp;&nbsp;&nbsp; int error;<br>&nbsp;&nbsp;&nbsp; pthread_t tid;<br>&nbsp;&nbsp;&nbsp; struct menber *c;</p>
<p>&nbsp;&nbsp;&nbsp; error = pthread_create(&amp;tid, NULL, create, NULL);<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; if( error )<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("new thread is not created ... /n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -1;<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; printf("main ... /n");</p>
<p>&nbsp;&nbsp;&nbsp; error = pthread_join(tid,(void *)&amp;c);</p>
<p>&nbsp;&nbsp;&nbsp; if( error )<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("new thread is not exit ... /n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -2;<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; printf("c-&gt;a = %d&nbsp; /n",c-&gt;a);<br>&nbsp;&nbsp;&nbsp; printf("c-&gt;b = %s&nbsp; /n",c-&gt;b);<br>&nbsp;&nbsp;&nbsp; sleep(1);<br>&nbsp;&nbsp;&nbsp; return 0;<br>}</p>
<p><br>&nbsp; 编译方法：</p>
<p>gcc -Wall pthread_return_struct.c -lpthread</p>
<p><br>&nbsp;&nbsp;&nbsp; 执行结果：</p>
<p>main ...<br>new thread ...<br>c-&gt;a = 8<br>c-&gt;b = zieckey</p>
<p><br>例程总结：<br>一定要记得返回的数据结构要是在这个数据要返回的结构没有释放的时候应用，<br>如果数据结构已经发生变化，那返回的就不会是我们所需要的，而是脏数据<br>3、线程标识</p>
<p>&nbsp;&nbsp;&nbsp; 函数原型：<br>&nbsp;&nbsp; <br>#include &lt;pthread.h&gt;<br>pthread_t pthread_self(void);</p>
<p>pid_t getpid(void);<br>&nbsp;&nbsp;&nbsp; getpid()用来取得目前进程的进程识别码,函数说明</p>
<p>&nbsp;&nbsp;&nbsp; 例程8<br>&nbsp;&nbsp;&nbsp; 程序目的：实现在新建立的线程中打印该线程的id和进程id<br>&nbsp;&nbsp;&nbsp; 程序名称：pthread_id.c<br>&nbsp; <br>/********************************************************************************************<br>**&nbsp;&nbsp;&nbsp; Name:pthread_id.c<br>**&nbsp;&nbsp;&nbsp; Used to study the multithread programming in Linux OS.<br>**&nbsp;&nbsp;&nbsp; Showing how to get the thread's tid and the process's pid.<br>**&nbsp;&nbsp;&nbsp; Author:zeickey<br>**&nbsp;&nbsp;&nbsp; Date:2006/9/16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>**&nbsp;&nbsp;&nbsp; Copyright (c) 2006,All Rights Reserved!<br>*********************************************************************************************/<br>#include &lt;stdio.h&gt;<br>#include &lt;pthread.h&gt;<br>#include &lt;unistd.h&gt; /*getpid()*/</p>
<p>void *create(void *arg)<br>{<br>&nbsp;&nbsp;&nbsp; printf("New thread .... /n");<br>&nbsp;&nbsp;&nbsp; printf("This thread's id is %u&nbsp; /n", (unsigned int)pthread_self());<br>&nbsp;&nbsp;&nbsp; printf("The process pid is %d&nbsp; /n",getpid());<br>&nbsp;&nbsp;&nbsp; return (void *)0;<br>}</p>
<p>int main(int argc,char *argv[])<br>{<br>&nbsp;&nbsp;&nbsp; pthread_t tid;<br>&nbsp;&nbsp;&nbsp; int error;</p>
<p>&nbsp;&nbsp;&nbsp; printf("Main thread is starting ... /n");</p>
<p>&nbsp;&nbsp;&nbsp; error = pthread_create(&amp;tid, NULL, create, NULL);</p>
<p>&nbsp;&nbsp;&nbsp; if(error)<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("thread is not created ... /n");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -1;<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; printf("The main process's pid is %d&nbsp; /n",getpid());<br>&nbsp;&nbsp;&nbsp; sleep(1);<br>&nbsp;&nbsp;&nbsp; return 0;<br>}</p>
<p><br>&nbsp;&nbsp;&nbsp; 编译方法：</p>
<p>&nbsp; <br>gcc -Wall -lpthread pthread_id.c</p>
<p>&nbsp;&nbsp;&nbsp; 执行结果：</p>
<p>Main thread is starting ...<br>The main process's pid is 3307 <br>New thread ....<br>This thread's id is 3086347152 <br>The process pid is 3307</p>
<p><a href="http://blog.csdn.net/gnuhpc/archive/2009/07/18/4358618.aspx"></a></p>
</div>

<div class="share_buttons" id="sharePanel"><span>分享到：</span> <a name="sina" class="share_sina" title="分享到新浪微博"></a><a name="qq" class="share_qq" title="分享到腾讯微博"></a></div>
<!--192.168.100.33-->
<div class="article_next_prev">
    <li class="prev_article"><span>上一篇：</span><a href="http://blog.csdn.net/do2jiang/article/details/5527133">信号机制、共享内存和消息队列</a></li>
    <li class="next_article"><span>下一篇：</span><a href="http://blog.csdn.net/do2jiang/article/details/5528084">宏内核与微内核，Linux内核与Unix内核</a></li>
</div>


    
</div>
<div id="ad_cen">
<script type="text/javascript">BAIDU_CLB_SLOT_ID = "117306";</script>
<script type="text/javascript" src="./01_files/o.js"></script><div id="BAIDU_CLB_SLOT_PS_117306"></div><script charset="utf-8" src="./01_files/ecom"></script><div id="baidu_clb_slot_117306"><iframe id="baidu_clb_slot_iframe_117306" src="./01_files/01.htm" onload="BAIDU_CLB_renderFrame(&#39;117306&#39;)" width="728" height="90" vspace="0" hspace="0" allowtransparency="true" scrolling="no" marginheight="0" marginwidth="0" frameborder="0" style="border: 0; vertical-align: bottom; margin: 0; display: block;"></iframe></div>
</div>
<script type="text/javascript">
    //new Ad(4, 'ad_cen');
</script>
<div id="comment_title" class="panel_head">查看评论<a name="comments"></a></div>
<div id="comment_list"><dl class="comment_item comment_topic" id="comment_item_2014908"><dt class="comment_head" floor="1">1楼 <span class="user"><a class="username" href="http://blog.csdn.net/lilingmzai" target="_blank">lilingmzai</a> <span class="ptime">2011-11-10 19:58发表</span>  <a href="http://blog.csdn.net/do2jiang/article/details/5527155#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display: none;" commentid="2014908" username="lilingmzai"> <a href="http://blog.csdn.net/do2jiang/article/details/5527155#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/do2jiang/article/details/5527155#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/lilingmzai" target="_blank"><img src="./01_files/3_lilingmzai.jpg" width="40" height="40"></a></dd><dd class="comment_body">内容很丰富，很有用。</dd></dl><div class="clear"></div></div>
<div id="comment_bar" style="display: none;"></div>
<div id="comment_form"><div class="guest_link">您还没有登录,请<a href="javascript:void(0);" onclick="javascript:csdn.showLogin(function (dat) {js_logined(dat.data.userName);});">[登录]</a>或<a href="http://passport.csdn.net/account/register?from=http%3A%2F%2Fblog.csdn.net%2Fdo2jiang%2Farticle%2Fdetails%2F5527155">[注册]</a></div></div>
<div class="announce">* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
<script type="text/javascript">
    var fileName = '5527155';
    var commentscount = 1;
    var islock = false
</script>
<script type="text/javascript" src="./01_files/comment.js"></script>
<div id="ad_bot"><iframe id="ad_frm_0" frameborder="0" scrolling="no" src="./01_files/ad(1).htm" style="border-width: 0px; overflow: hidden; width: 732px; height: 170px;"></iframe></div>
<script type="text/javascript">
    new Ad(5, 'ad_bot');
</script>
<div id="report_dialog"></div>

<div id="d-top" style="display: block;">
<a id="d-top-a" href="http://blog.csdn.net/do2jiang/article/details/5527155#" title="回到顶部">
<img src="./01_files/top.png" alt="TOP"></a>
</div>
<script type="text/javascript">
    $(function(){
        var d_top=$('#d-top');
        document.onscroll=function(){
            var scrTop=(document.body.scrollTop||document.documentElement.scrollTop);
            if(scrTop>500){
                d_top.show();
            }else{
                d_top.hide();
            }
        }
        $('#d-top-a').click(function(){
            scrollTo(0,0);
            this.blur();
            return false;
        });
    });
</script>

<div class="clear"></div>
</div>
</div>

<div id="side">
<div class="side">
<div id="custom_column_981710" class="panel">
<ul class="panel_head"><span>关注魔豆博主</span></ul>
<ul class="panel_body">

魔豆博主新浪Weibo：<br>
<a target="_blank" href="http://t.mythroad.net/" title="魔豆博主"><strong>http://t.mythroad.net</strong></a><br>
<br>
博主个人网站：<br>
<a target="_blank" href="http://www.mythroad.net/" title="魔豆之路"><strong>http://www.mythroad.net</strong></a>

</ul>
</div><div id="custom_column_981712" class="panel">
<ul class="panel_head"><span>QQ互动群</span></ul>
<ul class="panel_body">

Linux系统与内核群：<br>
<strong>194051772</strong><br>
WP建站技术群：<br>
<strong>194062106</strong>

</ul>
</div><div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/do2jiang" target="_blank">
    <img src="./01_files/1_do2jiang.jpg" title="访问我的空间" style="max-width:90%">
    </a>
    <br>
    <span><a href="http://my.csdn.net/do2jiang" class="user_name" target="_blank">do2jiang</a></span>
</div>
<div class="interact">
<a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]"></a>
<a href="javascript:void(0);" class="letter" onclick="loginto(1)" title="[发私信]"></a>
</div>
<div id="blog_medal">
<div id="bms_box"></div></div>
<ul id="blog_rank">
    <li>访问：<span>1179082次</span></li>
    <li>积分：<span>12275分</span></li>
    <li>排名：<span>第199名</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>332篇</span></li>
    <li>转载：<span>202篇</span></li>
    <li>译文：<span>0篇</span></li>
    <li>评论：<span>188条</span></li>
</ul>
</ul>
</div>

<div class="panel">
<ul class="panel_body" style="padding:0;">
<script type="text/javascript" src="./01_files/m.js"></script> 
<script type="text/javascript"> 
BAIDU_CLB_preloadSlots("724643","117306"); 
</script><script charset="utf-8" src="./01_files/ecom(1)"></script>
<script type="text/javascript">BAIDU_CLB_fillSlot("724643");</script><script type="text/javascript"><!--
google_ad_client = "ca-pub-1076724771190722";
/* 博客内页 200&#42;200 */
google_ad_slot = "9073392646";
google_ad_width = 200;
google_ad_height = 200;
//-->
</script>
<script type="text/javascript" src="./01_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:200px;margin:0;padding:0;position:relative;visibility:visible;width:200px"><ins id="aswift_0_anchor" style="display:block;border:none;height:200px;margin:0;padding:0;position:relative;visibility:visible;width:200px"><iframe width="200" height="200" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;"></iframe></ins></ins> 
</ul>
</div>
<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字"></span>
        <input id="btnSubmit" type="submit" value="搜索" title="search in blog">
        <input type="hidden" name="q" id="inputQ">
        <input type="hidden" name="t" value="blog">
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div><div id="custom_column_981711" class="panel">
<ul class="panel_head"><span>Life</span></ul>
<ul class="panel_body">

<ul>
<li><a href="http://www.mythroad.net/" target="_blank">魔豆之路博客</a> </li><li><a href="http://www.mythroad.net/" target="_blank">魔豆android</a> </li><li><a href="http://www.mythroad.net/" target="_blank">魔豆iOS</a> </li><li><a href="http://www.leledoor.com/" target="_blank">乐乐豆优惠街</a> </li><li><a href="http://www.3a5a.com/" target="_blank">郎咸平中文网</a> </li><li><a href="http://user.qzone.qq.com/622004674/blog" target="_blank">叶檀 —《每日经济新闻》评论员</a>
</li><li><a href="http://user.qzone.qq.com/622004678/blog" target="_blank">郎咸平-腾讯博客</a>
</li><li><a href="http://www.csuhz.com/" target="_blank">中南大学杭州校友会</a> </li></ul>

</ul>
</div><div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/533382">A.ANSI/ISO C</a><span>(35)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/533381">B.Visual C++</a><span>(29)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/533385">C.脚本语言  </a><span>(36)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/625036">D.汇编语言(Nasm/GAS)</a><span>(12)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/872263">E.杀毒代码研究</a><span>(1)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/587409">J.Mobile开发</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/533380">K.Windows开发</a><span>(51)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/533379">L.Linux 开发</a><span>(183)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/533383">M.H.264</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/533384">N.网络</a><span>(58)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/629321">NAS</a><span>(23)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/533386">O.嵌入式系统开发</a><span>(46)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/588525">P.OS-操作系统 &amp;amp; 内核</a><span>(90)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/592977">Q.笔试面试代码题</a><span>(27)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/592985">R.IT清华</a><span>(22)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/687863">T.文本分类</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/687862">T.群智能搜索算法</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/687861">T.视频编码</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/680240">U.数据结构与算法</a><span>(6)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/598902">V.生活知识</a><span>(51)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/587412">W.无线前线</a><span>(29)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/538914">X.硬件知识</a><span>(38)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/533407">Y.WindowS基本知识备忘</a><span>(38)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/533391">Z.小程序下载</a><span>(1)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/670399">奇文共欣赏</a><span>(21)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/1170185">Z.创业</a><span>(26)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/category/1347076">Z.移动互联</a><span>(14)</span>
</li>
</ul>
</div><div id="hotarticls" class="panel">
<ul class="panel_head"><span>阅读排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/8599987" title="马明哲：平安最大对手是阿里和腾讯等现代科技企业">马明哲：平安最大对手是阿里和腾讯等现代科技企业</a><span>(120591)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/8592279" title="ListView加载速度/性能优化方案分析">ListView加载速度/性能优化方案分析</a><span>(47480)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/8682705" title="马云的第三次创业：悄然布局三大帝国">马云的第三次创业：悄然布局三大帝国</a><span>(41420)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/5450839" title="[经典]Linux内核中ioremap映射的透彻理解">[经典]Linux内核中ioremap映射的透彻理解</a><span>(36481)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/7741934" title="商战传奇：周鸿祎死磕雷军的背后的三重玄机">商战传奇：周鸿祎死磕雷军的背后的三重玄机</a><span>(32592)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/7676694" title="雷军：最后的风口">雷军：最后的风口</a><span>(31917)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/7676971" title="小米CEO雷军的烦恼：遇周鸿祎挑衅">小米CEO雷军的烦恼：遇周鸿祎挑衅</a><span>(30092)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/8614350" title="杭州GDG周三(2013-2-27)聚会 （第六期）">杭州GDG周三(2013-2-27)聚会 （第六期）</a><span>(25404)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/4545729" title="RISC与CISC比较">RISC与CISC比较</a><span>(22956)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/7677258" title="周鸿祎谈做手机：我觉得马化腾不可能不动">周鸿祎谈做手机：我觉得马化腾不可能不动</a><span>(22516)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/5450839" title="[经典]Linux内核中ioremap映射的透彻理解">[经典]Linux内核中ioremap映射的透彻理解</a><span>(14)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/4690967" title="进程地址空间与虚拟存储空间的理解">进程地址空间与虚拟存储空间的理解</a><span>(13)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/4545729" title="RISC与CISC比较">RISC与CISC比较</a><span>(7)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/8599987" title="马明哲：平安最大对手是阿里和腾讯等现代科技企业">马明哲：平安最大对手是阿里和腾讯等现代科技企业</a><span>(6)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/5616862" title="MMU ">MMU </a><span>(5)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/4594716" title="configure: error: Bluetooth library is required">configure: error: Bluetooth library is required</a><span>(5)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/4965967" title="CentOS 2.6.32内核升级遇到问题记录以备忘">CentOS 2.6.32内核升级遇到问题记录以备忘</a><span>(4)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/5146911" title=" Enforcing mode requested but no policy loaded. Halting now. kernel panic - not syncing:  Attempted to kill init! "> Enforcing mode requested but no policy loaded. Halting now. kernel panic - not syncing:  Attempted to kill init! </a><span>(4)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/5562994" title="Linux内核增加系统调用">Linux内核增加系统调用</a><span>(4)</span>
</li>
<li>
<a href="http://blog.csdn.net/do2jiang/article/details/5548960" title="【数据结构重温】Linux内核中的hash和bucket">【数据结构重温】Linux内核中的hash和bucket</a><span>(4)</span>
</li>
</ul>
</div>
<div id="homepageArticles" class="panel">
<ul class="panel_head"><span>推荐文章</span></ul>
<ul class="panel_body" id="ad_commend"><iframe id="ad_frm_1" frameborder="0" scrolling="no" src="./01_files/ad.htm" style="border-width: 0px; overflow: hidden; width: 196px; height: 218px;"></iframe></ul>
</div>
<script type="text/javascript">
 new Ad(12, 'ad_commend');
</script><div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
    <a href="http://blog.csdn.net/do2jiang/article/details/10988683#comments">微软收购诺基亚 百年老店必将引发蝴蝶效应</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/do2jiang" class="user_name">do2jiang</a>:
@kangzs11:你可以看看 《蝴蝶效应》的电影
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/do2jiang/article/details/10988683#comments">微软收购诺基亚 百年老店必将引发蝴蝶效应</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/kangzs11" class="user_name">kangzs11</a>:
高水平大编，能不能先百度百科“蝴蝶效应”的意思？
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/do2jiang/article/details/9570621#comments">Android页面左右滑动浏览图片（Gallery示例）</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/do2jiang" class="user_name">do2jiang</a>:
@q2390183798:^_^
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/do2jiang/article/details/9570621#comments">Android页面左右滑动浏览图片（Gallery示例）</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/q2390183798" class="user_name">dodoniao</a>:
看了楼主的一些博文貌似很强，以后如果小弟有问题还要多多请教您！！
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/do2jiang/article/details/8592279#comments">ListView加载速度/性能优化方案分析</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/woyaowenzi" class="user_name">woyaowenzi</a>:
不错，很有价值，收藏之。我觉得还有一种是，使用3D加速。另外，有几点疑问：1. 图像尺寸不合适会导致...
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/do2jiang/article/details/4594674#comments">交叉编译D-Bus之备忘录</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/lee19830714" class="user_name">lee19830714</a>:
为何两次修改Makefile的地方相同呢
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/do2jiang/article/details/4690967#comments">进程地址空间与虚拟存储空间的理解</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/houliang120" class="user_name">houliang120</a>:
写的相当好啊，发展脉络清楚，还有清楚的实例。。。我很好奇的是：系统为每个进程分配了4G的虚拟地址空间...
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/do2jiang/article/details/8883493#comments">WordPress淘宝客ZZDGM主题Upanel插件使用补充</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/arlonzy" class="user_name">arlonzy</a>:
XML 导入UP 后设置无任何反应。XML 可能没破解完整。
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/do2jiang/article/details/5444966#comments">Linux内核中printk与日志级别</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/styshoo1986" class="user_name">styshoo1986</a>:
好文章，支持！！！
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/do2jiang/article/details/4594716#comments">configure: error: Bluetooth library is required</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/u010338440" class="user_name">u010338440</a>:
我在编译bluez-utils-3.36的时候也出现这个问题，configure: error: B...
    </p>
    </li>
</ul>
</div>
<div id="panel_Archive" class="panel">
<ul class="panel_head"><span>文章存档</span></ul>
<ul class="panel_body">
<div id="archive_list"><li><a href="http://blog.csdn.net/do2jiang/article/month/2013/09">2013年09月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2013/08">2013年08月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2013/07">2013年07月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2013/05">2013年05月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2013/04">2013年04月</a><span>(4)</span></li><span class="hidelist" style="display:none;"><li><a href="http://blog.csdn.net/do2jiang/article/month/2013/03">2013年03月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2013/02">2013年02月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2013/01">2013年01月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2012/12">2012年12月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2012/11">2012年11月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2012/10">2012年10月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2012/09">2012年09月</a><span>(8)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2012/08">2012年08月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2012/07">2012年07月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2012/06">2012年06月</a><span>(9)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2011/12">2011年12月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2011/11">2011年11月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2011/10">2011年10月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2011/08">2011年08月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2011/07">2011年07月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2011/06">2011年06月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2011/05">2011年05月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2011/04">2011年04月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2011/03">2011年03月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2010/12">2010年12月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2010/11">2010年11月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2010/10">2010年10月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2010/09">2010年09月</a><span>(9)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2010/08">2010年08月</a><span>(16)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2010/07">2010年07月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2010/05">2010年05月</a><span>(41)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2010/04">2010年04月</a><span>(68)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2010/03">2010年03月</a><span>(53)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2010/02">2010年02月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2010/01">2010年01月</a><span>(40)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2009/12">2009年12月</a><span>(53)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2009/11">2009年11月</a><span>(24)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2009/10">2009年10月</a><span>(28)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2009/09">2009年09月</a><span>(83)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2009/08">2009年08月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2009/06">2009年06月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2009/05">2009年05月</a><span>(12)</span></li><li><a href="http://blog.csdn.net/do2jiang/article/month/2009/04">2009年04月</a><span>(15)</span></li></span><div id="archive_list_button" class="list_closed">展开</div></div>
</ul>
</div>
</div>
<div class="clear"></div>
</div>

<div class="clear"></div>
</div>

<script type="text/javascript" src="./01_files/newblog.min.js"></script>
<script type="text/javascript" src="./01_files/showblogmedal.ashx"></script>

<script type="text/javascript">
document.write('<script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/publib_footer.js?' + Math.floor(new Date()/120000).toString(36) + '="></'+'script>');
</script><script type="text/javascript" src="./01_files/publib_footer.js"></script><link rel="stylesheet" type="text/css" href="./01_files/pub_footer_2012.css"><div id="pub_footerall" class="pub_footerall"><dl><dt></dt> <dd><a href="http://www.csdn.net/company/about.html" target="_blank">公司简介</a>|<a href="http://www.csdn.net/company/recruit.html" target="_blank">招贤纳士</a>|<a href="http://www.csdn.net/company/marketing.html" target="_blank">广告服务</a>|<a href="http://www.csdn.net/company/account.html" target="_blank">银行汇款帐号</a>|<a href="http://www.csdn.net/company/contact.html" target="_blank">联系方式</a>|<a href="http://www.csdn.net/company/statement.html" target="_blank">版权声明</a>|<a href="http://www.csdn.net/company/layer.html" target="_blank">法律顾问</a>|<a href="mailto:webmaster@csdn.net">问题报告</a></dd><dd><a href="http://wpa.qq.com/msgrd?v=3&uin=2355263776&site=qq&menu=yes" target="_blank" class="qq">QQ客服</a> <a href="http://e.weibo.com/csdnsupport/profile" target="_blank" class="weibo">微博客服</a> <a href="http://bbs.csdn.net/forums/Service" target="_blank" class="online">论坛反馈</a> <a href="mailto:webmaster@csdn.net" class="email">联系邮箱：webmaster@csdn.net</a> <span class="phone">服务热线：400-600-2320</span></dd><dd>京&nbsp;ICP&nbsp;证&nbsp;070598&nbsp;号</dd><dd>北京创新乐知信息技术有限公司 版权所有</dd><dd>世纪乐知(北京)网络技术有限公司 提供技术支持</dd><dd>江苏乐知网络技术有限公司 提供商务支持</dd><dd>Copyright © 1999-2012, CSDN.NET, All Rights Reserved&nbsp;<a href="http://www.hd315.gov.cn/beian/view.asp?bianhao=010202001032100010" target="_blank"><img src="./01_files/gongshang_logos.gif" alt="GongshangLogo" title=""></a></dd></dl></div><script id="noticeScript" type="text/javascript" btnid="header_notice_num" wrapid="note1" count="5" subcount="5" src="./01_files/notify.js"></script><script type="text/javascript" charset="utf-8" src="./01_files/tracking.js"></script>

<script type="text/javascript" src="./01_files/login.js"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script><img src="./01_files/pv.aspx" border="0" width="0" height="0">
<script type="text/javascript" src="./01_files/counter.js"></script><script type="text/javascript" charset="UTF-8" src="./01_files/msg.popup.js"></script>


<script type="text/javascript" src="./01_files/ad-blog.js"></script>

<script type="text/javascript" src="./01_files/count.js"></script><iframe src="./01_files/logs.htm" frameborder="0" width="0" height="0"></iframe>

</div>

</body></html>